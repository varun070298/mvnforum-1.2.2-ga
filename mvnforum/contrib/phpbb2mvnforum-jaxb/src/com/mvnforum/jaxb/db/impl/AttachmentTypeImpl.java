//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.12.29 at 03:19:11 PM GMT+07:00 
//


package com.mvnforum.jaxb.db.impl;

public class AttachmentTypeImpl implements com.mvnforum.jaxb.db.AttachmentType, com.sun.xml.bind.JAXBObject, com.mvnforum.jaxb.db.impl.runtime.UnmarshallableObject, com.mvnforum.jaxb.db.impl.runtime.XMLSerializable, com.mvnforum.jaxb.db.impl.runtime.ValidatableObject
{

    protected java.lang.String _AttachModifiedDate;
    protected java.lang.String _AttachFilename;
    protected java.lang.String _AttachCreationIP;
    protected boolean has_AttachOption;
    protected int _AttachOption;
    protected boolean has_AttachStatus;
    protected int _AttachStatus;
    protected java.lang.String _AttachDesc;
    protected java.lang.String _MemberName;
    protected java.lang.String _AttachMimeType;
    protected boolean has_AttachDownloadCount;
    protected int _AttachDownloadCount;
    protected java.lang.String _AttachCreationDate;
    protected boolean has_AttachFileSize;
    protected int _AttachFileSize;
    public final static java.lang.Class version = (com.mvnforum.jaxb.db.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.mvnforum.jaxb.db.AttachmentType.class);
    }

    public java.lang.String getAttachModifiedDate() {
        return _AttachModifiedDate;
    }

    public void setAttachModifiedDate(java.lang.String value) {
        _AttachModifiedDate = value;
    }

    public java.lang.String getAttachFilename() {
        return _AttachFilename;
    }

    public void setAttachFilename(java.lang.String value) {
        _AttachFilename = value;
    }

    public java.lang.String getAttachCreationIP() {
        return _AttachCreationIP;
    }

    public void setAttachCreationIP(java.lang.String value) {
        _AttachCreationIP = value;
    }

    public int getAttachOption() {
        return _AttachOption;
    }

    public void setAttachOption(int value) {
        _AttachOption = value;
        has_AttachOption = true;
    }

    public int getAttachStatus() {
        return _AttachStatus;
    }

    public void setAttachStatus(int value) {
        _AttachStatus = value;
        has_AttachStatus = true;
    }

    public java.lang.String getAttachDesc() {
        return _AttachDesc;
    }

    public void setAttachDesc(java.lang.String value) {
        _AttachDesc = value;
    }

    public java.lang.String getMemberName() {
        return _MemberName;
    }

    public void setMemberName(java.lang.String value) {
        _MemberName = value;
    }

    public java.lang.String getAttachMimeType() {
        return _AttachMimeType;
    }

    public void setAttachMimeType(java.lang.String value) {
        _AttachMimeType = value;
    }

    public int getAttachDownloadCount() {
        return _AttachDownloadCount;
    }

    public void setAttachDownloadCount(int value) {
        _AttachDownloadCount = value;
        has_AttachDownloadCount = true;
    }

    public java.lang.String getAttachCreationDate() {
        return _AttachCreationDate;
    }

    public void setAttachCreationDate(java.lang.String value) {
        _AttachCreationDate = value;
    }

    public int getAttachFileSize() {
        return _AttachFileSize;
    }

    public void setAttachFileSize(int value) {
        _AttachFileSize = value;
        has_AttachFileSize = true;
    }

    public com.mvnforum.jaxb.db.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.mvnforum.jaxb.db.impl.runtime.UnmarshallingContext context) {
        return new com.mvnforum.jaxb.db.impl.AttachmentTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.mvnforum.jaxb.db.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_AttachFileSize) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AttachFileSize"));
        }
        if (_MemberName!= null) {
            context.startElement("", "MemberName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberName), "MemberName");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "AttachFilename");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _AttachFilename), "AttachFilename");
        } catch (java.lang.Exception e) {
            com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "AttachFileSize");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _AttachFileSize)), "AttachFileSize");
        } catch (java.lang.Exception e) {
            com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "AttachMimeType");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _AttachMimeType), "AttachMimeType");
        } catch (java.lang.Exception e) {
            com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_AttachDesc!= null) {
            context.startElement("", "AttachDesc");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AttachDesc), "AttachDesc");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_AttachCreationIP!= null) {
            context.startElement("", "AttachCreationIP");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AttachCreationIP), "AttachCreationIP");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_AttachCreationDate!= null) {
            context.startElement("", "AttachCreationDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AttachCreationDate), "AttachCreationDate");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_AttachModifiedDate!= null) {
            context.startElement("", "AttachModifiedDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AttachModifiedDate), "AttachModifiedDate");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_AttachDownloadCount) {
            context.startElement("", "AttachDownloadCount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _AttachDownloadCount)), "AttachDownloadCount");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_AttachOption) {
            context.startElement("", "AttachOption");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _AttachOption)), "AttachOption");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_AttachStatus) {
            context.startElement("", "AttachStatus");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _AttachStatus)), "AttachStatus");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.mvnforum.jaxb.db.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_AttachFileSize) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AttachFileSize"));
        }
    }

    public void serializeURIs(com.mvnforum.jaxb.db.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_AttachFileSize) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AttachFileSize"));
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.mvnforum.jaxb.db.AttachmentType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.Choi"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Element"
+"Pattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameCl"
+"ass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUn"
+"declaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Bo"
+"olean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar"
+".DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000"
+"\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003pps"
+"r\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlways"
+"Validxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'co"
+"m.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespace"
+"Urit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom"
+"/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3"
+".org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.gramma"
+"r.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun"
+".msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespace"
+"URIq\u0000~\u0000 xpq\u0000~\u0000$q\u0000~\u0000#sq\u0000~\u0000\u000fppsr\u0000 com.sun.msv.grammar.Attribut"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0012xq\u0000~\u0000\u0003q\u0000~\u0000\u0016psq\u0000~\u0000"
+"\u0018ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000"
+"~\u0000#t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
+"Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u00002q\u0000~\u0000#sr\u0000#com.sun.ms"
+"v.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fname"
+"spaceURIq\u0000~\u0000 xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt"
+"\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.su"
+"n.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003s"
+"q\u0000~\u0000\u0015\u0001psq\u0000~\u00006t\u0000\nMemberNamet\u0000\u0000q\u0000~\u0000<sq\u0000~\u0000\u0011pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001bsq\u0000~"
+"\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u000eAttachFilenameq\u0000~\u0000@s"
+"q\u0000~\u0000\u0011pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0018ppsr\u0000 com.sun.msv.datatype.xsd.IntType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1"
+"]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatyp"
+"eImpl;xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0003intq\u0000~\u00004sr\u0000*com.sun.msv.datatype.xsd.Max"
+"InclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeF"
+"acet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun"
+".msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000"
+"\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000"
+"\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000LL\u0000\fconcret"
+"eTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq"
+"\u0000~\u0000 xq\u0000~\u0000\u001fppq\u0000~\u00004\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclusive"
+"Facet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Pppq\u0000~\u00004\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd."
+"LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Kq\u0000~\u0000#t\u0000\u0004longq\u0000~\u00004sq\u0000~\u0000Oppq\u0000~\u00004\u0000\u0001sq\u0000"
+"~\u0000Vppq\u0000~\u00004\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000Kq\u0000~\u0000#t\u0000\u0007integerq\u0000~\u00004sr\u0000,com.sun.msv.datatype.xsd.Fr"
+"actionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype"
+".xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Sppq\u0000"
+"~\u00004\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u001dq\u0000~\u0000#t\u0000\u0007decimalq\u0000~\u00004q\u0000~\u0000dt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000^t\u0000\fminIn"
+"clusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Nu"
+"mber\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000^t\u0000\fmaxInclusivesq\u0000~\u0000h\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq"
+"\u0000~\u0000Yq\u0000~\u0000gsr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000i\u0080\u0000\u0000\u0000q"
+"\u0000~\u0000Yq\u0000~\u0000ksq\u0000~\u0000m\u007f\u00ff\u00ff\u00ffq\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000Nq\u0000~\u0000#sq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016p"
+"q\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u000eAttachFileSizeq\u0000~\u0000@sq\u0000~\u0000\u0011pp\u0000sq\u0000~\u0000\u0000pp"
+"q\u0000~\u0000\u001bsq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u000eAttachMimeT"
+"ypeq\u0000~\u0000@sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001bsq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000"
+"\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\nAttachDescq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011"
+"q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001bsq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u0000"
+"6t\u0000\u0010AttachCreationIPq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq"
+"\u0000~\u0000\u001bsq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0012AttachCreati"
+"onDateq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001bsq\u0000~\u0000\u000fppsq"
+"\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0012AttachModifiedDateq\u0000~\u0000@q\u0000~"
+"\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Isq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000"
+"/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0013AttachDownloadCountq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000"
+"~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Isq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq"
+"\u0000~\u00006t\u0000\fAttachOptionq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000"
+"~\u0000Isq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\fAttachStatusq"
+"\u0000~\u0000@q\u0000~\u0000<sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;x"
+"psr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000"
+"\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Ex"
+"pressionPool;xp\u0000\u0000\u0000(\u0001pq\u0000~\u0000\u0097q\u0000~\u0000\u009eq\u0000~\u0000\u00a5q\u0000~\u0000\fq\u0000~\u0000\u0017q\u0000~\u0000Bq\u0000~\u0000vq\u0000~\u0000"
+"}q\u0000~\u0000\u0084q\u0000~\u0000\u008bq\u0000~\u0000\u0092q\u0000~\u0000\u0007q\u0000~\u0000\u0006q\u0000~\u0000\u000bq\u0000~\u0000\bq\u0000~\u0000,q\u0000~\u0000Cq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000"
+"~q\u0000~\u0000\u0085q\u0000~\u0000\u008cq\u0000~\u0000\tq\u0000~\u0000\u0093q\u0000~\u0000\u009aq\u0000~\u0000\u00a1q\u0000~\u0000\u00a8q\u0000~\u0000\nq\u0000~\u0000\rq\u0000~\u0000\u000eq\u0000~\u0000\u0010q\u0000~\u0000"
+"{q\u0000~\u0000\u0082q\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0005q\u0000~\u0000Hq\u0000~\u0000\u0099q\u0000~\u0000\u00a0q\u0000~\u0000\u00a7x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.mvnforum.jaxb.db.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.mvnforum.jaxb.db.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------");
        }

        protected Unmarshaller(com.mvnforum.jaxb.db.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.mvnforum.jaxb.db.impl.AttachmentTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("AttachFileSize" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                    case  33 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  12 :
                        if (("AttachDesc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  21 :
                        if (("AttachModifiedDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  0 :
                        if (("MemberName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  24 :
                        if (("AttachDownloadCount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  15 :
                        if (("AttachCreationIP" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  18 :
                        if (("AttachCreationDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  30 :
                        if (("AttachStatus" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  27 :
                        if (("AttachOption" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  9 :
                        if (("AttachMimeType" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("AttachFilename" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  32 :
                        if (("AttachStatus" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("AttachDesc" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  33 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  29 :
                        if (("AttachOption" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  11 :
                        if (("AttachMimeType" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("AttachFilename" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  26 :
                        if (("AttachDownloadCount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("AttachCreationIP" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  20 :
                        if (("AttachCreationDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  23 :
                        if (("AttachModifiedDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("AttachFileSize" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("MemberName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  13 :
                            state = 14;
                            eatText1(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText2(value);
                            return ;
                        case  33 :
                            revertToParentFromText(value);
                            return ;
                        case  31 :
                            state = 32;
                            eatText3(value);
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  25 :
                            state = 26;
                            eatText4(value);
                            return ;
                        case  28 :
                            state = 29;
                            eatText5(value);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  16 :
                            state = 17;
                            eatText6(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText7(value);
                            return ;
                        case  22 :
                            state = 23;
                            eatText8(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText9(value);
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText10(value);
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText11(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AttachDesc = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AttachCreationDate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AttachStatus = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AttachStatus = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AttachDownloadCount = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AttachDownloadCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AttachOption = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AttachOption = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AttachCreationIP = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AttachFilename = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AttachModifiedDate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AttachFileSize = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AttachFileSize = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AttachMimeType = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}

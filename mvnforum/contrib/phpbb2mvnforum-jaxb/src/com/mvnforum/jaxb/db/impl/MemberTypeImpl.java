//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.12.29 at 03:19:11 PM GMT+07:00 
//


package com.mvnforum.jaxb.db.impl;

public class MemberTypeImpl implements com.mvnforum.jaxb.db.MemberType, com.sun.xml.bind.JAXBObject, com.mvnforum.jaxb.db.impl.runtime.UnmarshallableObject, com.mvnforum.jaxb.db.impl.runtime.XMLSerializable, com.mvnforum.jaxb.db.impl.runtime.ValidatableObject
{

    protected java.lang.String _MemberIcq;
    protected java.lang.String _MemberCountry;
    protected java.lang.String _MemberMobile;
    protected java.lang.String _MemberLastname;
    protected java.lang.String _MemberState;
    protected java.lang.String _MemberPassword;
    protected com.mvnforum.jaxb.db.MessageFolderList _MessageFolderList;
    protected boolean has_MemberTimeZone;
    protected double _MemberTimeZone;
    protected java.lang.String _MemberModifiedDate;
    protected java.lang.String _MemberMsn;
    protected java.lang.String _MemberTempPassword;
    protected java.lang.String _MemberName;
    protected java.lang.String _MemberAol;
    protected boolean has_MemberVoteTotalStars;
    protected int _MemberVoteTotalStars;
    protected java.lang.String _MemberActivateCode;
    protected java.lang.String _MemberAddress;
    protected java.lang.String _MemberCareer;
    protected java.lang.String _MemberSkin;
    protected java.lang.String _MemberBirthday;
    protected java.lang.String _MemberPhone;
    protected boolean has_MemberPostsPerPage;
    protected int _MemberPostsPerPage;
    protected boolean has_MemberViewCount;
    protected int _MemberViewCount;
    protected boolean has_MemberOption;
    protected int _MemberOption;
    protected boolean has_MemberNameVisible;
    protected int _MemberNameVisible;
    protected boolean has_MemberRewardPoints;
    protected int _MemberRewardPoints;
    protected boolean has_MemberStatus;
    protected int _MemberStatus;
    protected java.lang.String _MemberHomepage;
    protected java.lang.String _MemberExpireDate;
    protected java.lang.String _MemberCity;
    protected boolean has_MemberMessageOption;
    protected int _MemberMessageOption;
    protected java.lang.String _MemberTitle;
    protected java.lang.String _MemberFirstIP;
    protected boolean has_MemberPostCount;
    protected int _MemberPostCount;
    protected java.lang.String _MemberAvatar;
    protected java.lang.String _MemberLanguage;
    protected com.mvnforum.jaxb.db.GlobalPermissionList _GlobalPermissionList;
    protected boolean has_MemberVoteCount;
    protected int _MemberVoteCount;
    protected java.lang.String _MemberFirstEmail;
    protected java.lang.String _MemberYahoo;
    protected com.mvnforum.jaxb.db.MessageList _MessageList;
    protected boolean has_MemberMessageCount;
    protected int _MemberMessageCount;
    protected java.lang.String _MemberFirstname;
    protected java.lang.String _MemberSignature;
    protected boolean has_MemberGender;
    protected int _MemberGender;
    protected java.lang.String _MemberLastIP;
    protected java.lang.String _MemberCoolLink2;
    protected java.lang.String _MemberCoolLink1;
    protected java.lang.String _MemberLastLogon;
    protected boolean has_MemberEmailVisible;
    protected int _MemberEmailVisible;
    protected boolean has_MemberWarnCount;
    protected int _MemberWarnCount;
    protected com.mvnforum.jaxb.db.GlobalWatchList _GlobalWatchList;
    protected java.lang.String _MemberCreationDate;
    protected java.lang.String _MemberFax;
    protected java.lang.String _MemberEmail;
    public final static java.lang.Class version = (com.mvnforum.jaxb.db.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.mvnforum.jaxb.db.MemberType.class);
    }

    public java.lang.String getMemberIcq() {
        return _MemberIcq;
    }

    public void setMemberIcq(java.lang.String value) {
        _MemberIcq = value;
    }

    public java.lang.String getMemberCountry() {
        return _MemberCountry;
    }

    public void setMemberCountry(java.lang.String value) {
        _MemberCountry = value;
    }

    public java.lang.String getMemberMobile() {
        return _MemberMobile;
    }

    public void setMemberMobile(java.lang.String value) {
        _MemberMobile = value;
    }

    public java.lang.String getMemberLastname() {
        return _MemberLastname;
    }

    public void setMemberLastname(java.lang.String value) {
        _MemberLastname = value;
    }

    public java.lang.String getMemberState() {
        return _MemberState;
    }

    public void setMemberState(java.lang.String value) {
        _MemberState = value;
    }

    public java.lang.String getMemberPassword() {
        return _MemberPassword;
    }

    public void setMemberPassword(java.lang.String value) {
        _MemberPassword = value;
    }

    public com.mvnforum.jaxb.db.MessageFolderList getMessageFolderList() {
        return _MessageFolderList;
    }

    public void setMessageFolderList(com.mvnforum.jaxb.db.MessageFolderList value) {
        _MessageFolderList = value;
    }

    public double getMemberTimeZone() {
        return _MemberTimeZone;
    }

    public void setMemberTimeZone(double value) {
        _MemberTimeZone = value;
        has_MemberTimeZone = true;
    }

    public java.lang.String getMemberModifiedDate() {
        return _MemberModifiedDate;
    }

    public void setMemberModifiedDate(java.lang.String value) {
        _MemberModifiedDate = value;
    }

    public java.lang.String getMemberMsn() {
        return _MemberMsn;
    }

    public void setMemberMsn(java.lang.String value) {
        _MemberMsn = value;
    }

    public java.lang.String getMemberTempPassword() {
        return _MemberTempPassword;
    }

    public void setMemberTempPassword(java.lang.String value) {
        _MemberTempPassword = value;
    }

    public java.lang.String getMemberName() {
        return _MemberName;
    }

    public void setMemberName(java.lang.String value) {
        _MemberName = value;
    }

    public java.lang.String getMemberAol() {
        return _MemberAol;
    }

    public void setMemberAol(java.lang.String value) {
        _MemberAol = value;
    }

    public int getMemberVoteTotalStars() {
        return _MemberVoteTotalStars;
    }

    public void setMemberVoteTotalStars(int value) {
        _MemberVoteTotalStars = value;
        has_MemberVoteTotalStars = true;
    }

    public java.lang.String getMemberActivateCode() {
        return _MemberActivateCode;
    }

    public void setMemberActivateCode(java.lang.String value) {
        _MemberActivateCode = value;
    }

    public java.lang.String getMemberAddress() {
        return _MemberAddress;
    }

    public void setMemberAddress(java.lang.String value) {
        _MemberAddress = value;
    }

    public java.lang.String getMemberCareer() {
        return _MemberCareer;
    }

    public void setMemberCareer(java.lang.String value) {
        _MemberCareer = value;
    }

    public java.lang.String getMemberSkin() {
        return _MemberSkin;
    }

    public void setMemberSkin(java.lang.String value) {
        _MemberSkin = value;
    }

    public java.lang.String getMemberBirthday() {
        return _MemberBirthday;
    }

    public void setMemberBirthday(java.lang.String value) {
        _MemberBirthday = value;
    }

    public java.lang.String getMemberPhone() {
        return _MemberPhone;
    }

    public void setMemberPhone(java.lang.String value) {
        _MemberPhone = value;
    }

    public int getMemberPostsPerPage() {
        return _MemberPostsPerPage;
    }

    public void setMemberPostsPerPage(int value) {
        _MemberPostsPerPage = value;
        has_MemberPostsPerPage = true;
    }

    public int getMemberViewCount() {
        return _MemberViewCount;
    }

    public void setMemberViewCount(int value) {
        _MemberViewCount = value;
        has_MemberViewCount = true;
    }

    public int getMemberOption() {
        return _MemberOption;
    }

    public void setMemberOption(int value) {
        _MemberOption = value;
        has_MemberOption = true;
    }

    public int getMemberNameVisible() {
        return _MemberNameVisible;
    }

    public void setMemberNameVisible(int value) {
        _MemberNameVisible = value;
        has_MemberNameVisible = true;
    }

    public int getMemberRewardPoints() {
        return _MemberRewardPoints;
    }

    public void setMemberRewardPoints(int value) {
        _MemberRewardPoints = value;
        has_MemberRewardPoints = true;
    }

    public int getMemberStatus() {
        return _MemberStatus;
    }

    public void setMemberStatus(int value) {
        _MemberStatus = value;
        has_MemberStatus = true;
    }

    public java.lang.String getMemberHomepage() {
        return _MemberHomepage;
    }

    public void setMemberHomepage(java.lang.String value) {
        _MemberHomepage = value;
    }

    public java.lang.String getMemberExpireDate() {
        return _MemberExpireDate;
    }

    public void setMemberExpireDate(java.lang.String value) {
        _MemberExpireDate = value;
    }

    public java.lang.String getMemberCity() {
        return _MemberCity;
    }

    public void setMemberCity(java.lang.String value) {
        _MemberCity = value;
    }

    public int getMemberMessageOption() {
        return _MemberMessageOption;
    }

    public void setMemberMessageOption(int value) {
        _MemberMessageOption = value;
        has_MemberMessageOption = true;
    }

    public java.lang.String getMemberTitle() {
        return _MemberTitle;
    }

    public void setMemberTitle(java.lang.String value) {
        _MemberTitle = value;
    }

    public java.lang.String getMemberFirstIP() {
        return _MemberFirstIP;
    }

    public void setMemberFirstIP(java.lang.String value) {
        _MemberFirstIP = value;
    }

    public int getMemberPostCount() {
        return _MemberPostCount;
    }

    public void setMemberPostCount(int value) {
        _MemberPostCount = value;
        has_MemberPostCount = true;
    }

    public java.lang.String getMemberAvatar() {
        return _MemberAvatar;
    }

    public void setMemberAvatar(java.lang.String value) {
        _MemberAvatar = value;
    }

    public java.lang.String getMemberLanguage() {
        return _MemberLanguage;
    }

    public void setMemberLanguage(java.lang.String value) {
        _MemberLanguage = value;
    }

    public com.mvnforum.jaxb.db.GlobalPermissionList getGlobalPermissionList() {
        return _GlobalPermissionList;
    }

    public void setGlobalPermissionList(com.mvnforum.jaxb.db.GlobalPermissionList value) {
        _GlobalPermissionList = value;
    }

    public int getMemberVoteCount() {
        return _MemberVoteCount;
    }

    public void setMemberVoteCount(int value) {
        _MemberVoteCount = value;
        has_MemberVoteCount = true;
    }

    public java.lang.String getMemberFirstEmail() {
        return _MemberFirstEmail;
    }

    public void setMemberFirstEmail(java.lang.String value) {
        _MemberFirstEmail = value;
    }

    public java.lang.String getMemberYahoo() {
        return _MemberYahoo;
    }

    public void setMemberYahoo(java.lang.String value) {
        _MemberYahoo = value;
    }

    public com.mvnforum.jaxb.db.MessageList getMessageList() {
        return _MessageList;
    }

    public void setMessageList(com.mvnforum.jaxb.db.MessageList value) {
        _MessageList = value;
    }

    public int getMemberMessageCount() {
        return _MemberMessageCount;
    }

    public void setMemberMessageCount(int value) {
        _MemberMessageCount = value;
        has_MemberMessageCount = true;
    }

    public java.lang.String getMemberFirstname() {
        return _MemberFirstname;
    }

    public void setMemberFirstname(java.lang.String value) {
        _MemberFirstname = value;
    }

    public java.lang.String getMemberSignature() {
        return _MemberSignature;
    }

    public void setMemberSignature(java.lang.String value) {
        _MemberSignature = value;
    }

    public int getMemberGender() {
        return _MemberGender;
    }

    public void setMemberGender(int value) {
        _MemberGender = value;
        has_MemberGender = true;
    }

    public java.lang.String getMemberLastIP() {
        return _MemberLastIP;
    }

    public void setMemberLastIP(java.lang.String value) {
        _MemberLastIP = value;
    }

    public java.lang.String getMemberCoolLink2() {
        return _MemberCoolLink2;
    }

    public void setMemberCoolLink2(java.lang.String value) {
        _MemberCoolLink2 = value;
    }

    public java.lang.String getMemberCoolLink1() {
        return _MemberCoolLink1;
    }

    public void setMemberCoolLink1(java.lang.String value) {
        _MemberCoolLink1 = value;
    }

    public java.lang.String getMemberLastLogon() {
        return _MemberLastLogon;
    }

    public void setMemberLastLogon(java.lang.String value) {
        _MemberLastLogon = value;
    }

    public int getMemberEmailVisible() {
        return _MemberEmailVisible;
    }

    public void setMemberEmailVisible(int value) {
        _MemberEmailVisible = value;
        has_MemberEmailVisible = true;
    }

    public int getMemberWarnCount() {
        return _MemberWarnCount;
    }

    public void setMemberWarnCount(int value) {
        _MemberWarnCount = value;
        has_MemberWarnCount = true;
    }

    public com.mvnforum.jaxb.db.GlobalWatchList getGlobalWatchList() {
        return _GlobalWatchList;
    }

    public void setGlobalWatchList(com.mvnforum.jaxb.db.GlobalWatchList value) {
        _GlobalWatchList = value;
    }

    public java.lang.String getMemberCreationDate() {
        return _MemberCreationDate;
    }

    public void setMemberCreationDate(java.lang.String value) {
        _MemberCreationDate = value;
    }

    public java.lang.String getMemberFax() {
        return _MemberFax;
    }

    public void setMemberFax(java.lang.String value) {
        _MemberFax = value;
    }

    public java.lang.String getMemberEmail() {
        return _MemberEmail;
    }

    public void setMemberEmail(java.lang.String value) {
        _MemberEmail = value;
    }

    public com.mvnforum.jaxb.db.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.mvnforum.jaxb.db.impl.runtime.UnmarshallingContext context) {
        return new com.mvnforum.jaxb.db.impl.MemberTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.mvnforum.jaxb.db.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "MemberName");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _MemberName), "MemberName");
        } catch (java.lang.Exception e) {
            com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "MemberPassword");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _MemberPassword), "MemberPassword");
        } catch (java.lang.Exception e) {
            com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "MemberFirstEmail");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _MemberFirstEmail), "MemberFirstEmail");
        } catch (java.lang.Exception e) {
            com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "MemberEmail");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _MemberEmail), "MemberEmail");
        } catch (java.lang.Exception e) {
            com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (has_MemberEmailVisible) {
            context.startElement("", "MemberEmailVisible");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberEmailVisible)), "MemberEmailVisible");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MemberNameVisible) {
            context.startElement("", "MemberNameVisible");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberNameVisible)), "MemberNameVisible");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberFirstIP!= null) {
            context.startElement("", "MemberFirstIP");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberFirstIP), "MemberFirstIP");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberLastIP!= null) {
            context.startElement("", "MemberLastIP");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberLastIP), "MemberLastIP");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MemberViewCount) {
            context.startElement("", "MemberViewCount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberViewCount)), "MemberViewCount");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MemberPostCount) {
            context.startElement("", "MemberPostCount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberPostCount)), "MemberPostCount");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberCreationDate!= null) {
            context.startElement("", "MemberCreationDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberCreationDate), "MemberCreationDate");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberModifiedDate!= null) {
            context.startElement("", "MemberModifiedDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberModifiedDate), "MemberModifiedDate");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberExpireDate!= null) {
            context.startElement("", "MemberExpireDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberExpireDate), "MemberExpireDate");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberLastLogon!= null) {
            context.startElement("", "MemberLastLogon");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberLastLogon), "MemberLastLogon");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MemberOption) {
            context.startElement("", "MemberOption");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberOption)), "MemberOption");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MemberStatus) {
            context.startElement("", "MemberStatus");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberStatus)), "MemberStatus");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberActivateCode!= null) {
            context.startElement("", "MemberActivateCode");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberActivateCode), "MemberActivateCode");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberTempPassword!= null) {
            context.startElement("", "MemberTempPassword");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberTempPassword), "MemberTempPassword");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MemberMessageCount) {
            context.startElement("", "MemberMessageCount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberMessageCount)), "MemberMessageCount");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MemberMessageOption) {
            context.startElement("", "MemberMessageOption");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberMessageOption)), "MemberMessageOption");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MemberPostsPerPage) {
            context.startElement("", "MemberPostsPerPage");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberPostsPerPage)), "MemberPostsPerPage");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MemberWarnCount) {
            context.startElement("", "MemberWarnCount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberWarnCount)), "MemberWarnCount");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MemberVoteCount) {
            context.startElement("", "MemberVoteCount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberVoteCount)), "MemberVoteCount");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MemberVoteTotalStars) {
            context.startElement("", "MemberVoteTotalStars");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberVoteTotalStars)), "MemberVoteTotalStars");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MemberRewardPoints) {
            context.startElement("", "MemberRewardPoints");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberRewardPoints)), "MemberRewardPoints");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "MemberTitle");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _MemberTitle), "MemberTitle");
        } catch (java.lang.Exception e) {
            com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (has_MemberTimeZone) {
            context.startElement("", "MemberTimeZone");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _MemberTimeZone)), "MemberTimeZone");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberSignature!= null) {
            context.startElement("", "MemberSignature");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberSignature), "MemberSignature");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberAvatar!= null) {
            context.startElement("", "MemberAvatar");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberAvatar), "MemberAvatar");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberSkin!= null) {
            context.startElement("", "MemberSkin");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberSkin), "MemberSkin");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberLanguage!= null) {
            context.startElement("", "MemberLanguage");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberLanguage), "MemberLanguage");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "MemberFirstname");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _MemberFirstname), "MemberFirstname");
        } catch (java.lang.Exception e) {
            com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "MemberLastname");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _MemberLastname), "MemberLastname");
        } catch (java.lang.Exception e) {
            com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (has_MemberGender) {
            context.startElement("", "MemberGender");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MemberGender)), "MemberGender");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberBirthday!= null) {
            context.startElement("", "MemberBirthday");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberBirthday), "MemberBirthday");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberAddress!= null) {
            context.startElement("", "MemberAddress");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberAddress), "MemberAddress");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberCity!= null) {
            context.startElement("", "MemberCity");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberCity), "MemberCity");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberState!= null) {
            context.startElement("", "MemberState");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberState), "MemberState");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberCountry!= null) {
            context.startElement("", "MemberCountry");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberCountry), "MemberCountry");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberPhone!= null) {
            context.startElement("", "MemberPhone");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberPhone), "MemberPhone");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberMobile!= null) {
            context.startElement("", "MemberMobile");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberMobile), "MemberMobile");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberFax!= null) {
            context.startElement("", "MemberFax");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberFax), "MemberFax");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberCareer!= null) {
            context.startElement("", "MemberCareer");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberCareer), "MemberCareer");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberHomepage!= null) {
            context.startElement("", "MemberHomepage");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberHomepage), "MemberHomepage");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberYahoo!= null) {
            context.startElement("", "MemberYahoo");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberYahoo), "MemberYahoo");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberAol!= null) {
            context.startElement("", "MemberAol");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberAol), "MemberAol");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberIcq!= null) {
            context.startElement("", "MemberIcq");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberIcq), "MemberIcq");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberMsn!= null) {
            context.startElement("", "MemberMsn");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberMsn), "MemberMsn");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberCoolLink1 != null) {
            context.startElement("", "MemberCoolLink1");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberCoolLink1), "MemberCoolLink1");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MemberCoolLink2 != null) {
            context.startElement("", "MemberCoolLink2");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberCoolLink2), "MemberCoolLink2");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_GlobalPermissionList!= null) {
            context.startElement("", "GlobalPermissionList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _GlobalPermissionList), "GlobalPermissionList");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _GlobalPermissionList), "GlobalPermissionList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _GlobalPermissionList), "GlobalPermissionList");
            context.endElement();
        }
        if (_MessageFolderList!= null) {
            context.startElement("", "MessageFolderList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _MessageFolderList), "MessageFolderList");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _MessageFolderList), "MessageFolderList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _MessageFolderList), "MessageFolderList");
            context.endElement();
        }
        if (_GlobalWatchList!= null) {
            context.startElement("", "GlobalWatchList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _GlobalWatchList), "GlobalWatchList");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _GlobalWatchList), "GlobalWatchList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _GlobalWatchList), "GlobalWatchList");
            context.endElement();
        }
        if (_MessageList!= null) {
            context.startElement("", "MessageList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _MessageList), "MessageList");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _MessageList), "MessageList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _MessageList), "MessageList");
            context.endElement();
        }
    }

    public void serializeAttributes(com.mvnforum.jaxb.db.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(com.mvnforum.jaxb.db.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.mvnforum.jaxb.db.MemberType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001e"
+"com.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclared"
+"AttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.m"
+"sv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/D"
+"atatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair"
+";xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z"
+"\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000GL\u0000\nwhiteSp"
+"acet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 htt"
+"p://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun."
+"msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003pps"
+"r\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000GL\u0000"
+"\fnamespaceURIq\u0000~\u0000Gxpq\u0000~\u0000Kq\u0000~\u0000Jsr\u0000\u001dcom.sun.msv.grammar.Choice"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000;xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boo"
+"lean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000?ppsr\u0000\"com.sun.msv.datatype."
+"xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Dq\u0000~\u0000Jt\u0000\u0005QNamesr\u00005com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Mq\u0000~"
+"\u0000Psq\u0000~\u0000Qq\u0000~\u0000\\q\u0000~\u0000Jsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000GL\u0000\fnamespaceURIq\u0000~\u0000Gxr\u0000\u001dcom.sun.msv"
+".grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2"
+"001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000W\u0001psq\u0000~\u0000`t\u0000\nMemberNamet\u0000"
+"\u0000sq\u0000~\u0000:pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq"
+"\u0000~\u0000`t\u0000\u000eMemberPasswordq\u0000~\u0000jsq\u0000~\u0000:pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~"
+"\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0010MemberFirstEmailq\u0000~\u0000jsq\u0000~\u0000:p"
+"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000bM"
+"emberEmailq\u0000~\u0000jsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000?ppsr\u0000 com."
+"sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datat"
+"ype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/su"
+"n/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000Dq\u0000~\u0000Jt\u0000\u0003intq\u0000~\u0000^sr\u0000*"
+"com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com"
+".sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012L"
+"java/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithVa"
+"lueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Da"
+"taTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFl"
+"agL\u0000\bbaseTypeq\u0000~\u0000\u0083L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xs"
+"d/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000Gxq\u0000~\u0000Fppq\u0000~\u0000^\u0000\u0001sr\u0000*com.sun.m"
+"sv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0087ppq\u0000~\u0000^\u0000\u0000s"
+"r\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0082q\u0000~\u0000Jt\u0000"
+"\u0004longq\u0000~\u0000^sq\u0000~\u0000\u0086ppq\u0000~\u0000^\u0000\u0001sq\u0000~\u0000\u008dppq\u0000~\u0000^\u0000\u0000sr\u0000$com.sun.msv.data"
+"type.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0082q\u0000~\u0000Jt\u0000\u0007integerq\u0000~\u0000^sr\u0000"
+",com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005s"
+"calexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstrai"
+"ntFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u008appq\u0000~\u0000^\u0001\u0000sr\u0000#com.sun.msv.datatype.xs"
+"d.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Dq\u0000~\u0000Jt\u0000\u0007decimalq\u0000~\u0000^q\u0000~\u0000\u009bt\u0000\u000efra"
+"ctionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u0095t\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#"
+"\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u0095t\u0000"
+"\fmaxInclusivesq\u0000~\u0000\u009f\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u0090q\u0000~\u0000\u009esr\u0000\u0011java.lang.Integer\u0012\u00e2"
+"\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000\u00a0\u0080\u0000\u0000\u0000q\u0000~\u0000\u0090q\u0000~\u0000\u00a2sq\u0000~\u0000\u00a4\u007f\u00ff\u00ff\u00ffq\u0000~\u0000Psq\u0000~\u0000Qq\u0000"
+"~\u0000\u0085q\u0000~\u0000Jsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0012MemberEm"
+"ailVisibleq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0080sq\u0000~\u0000S"
+"ppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0011MemberNameVisibleq\u0000~\u0000j"
+"q\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq"
+"\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\rMemberFirstIPq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:"
+"q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000"
+"`t\u0000\fMemberLastIPq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0080"
+"sq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000fMemberViewCountq"
+"\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0080sq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~"
+"\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000fMemberPostCountq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Spp"
+"sq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000"
+"fsq\u0000~\u0000`t\u0000\u0012MemberCreationDateq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000s"
+"q\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0012Memb"
+"erModifiedDateq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq"
+"\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0010MemberExpireDateq\u0000"
+"~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000"
+"Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000fMemberLastLogonq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Spps"
+"q\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0080sq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000f"
+"sq\u0000~\u0000`t\u0000\fMemberOptionq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000pp"
+"q\u0000~\u0000\u0080sq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\fMemberStatu"
+"sq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq"
+"\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0012MemberActivateCodeq\u0000~\u0000jq\u0000~\u0000fsq\u0000"
+"~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000"
+"bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0012MemberTempPasswordq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~"
+"\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0080sq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000"
+"\u0012MemberMessageCountq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000"
+"~\u0000\u0080sq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0013MemberMessage"
+"Optionq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0080sq\u0000~\u0000Sppsq"
+"\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0012MemberPostsPerPageq\u0000~\u0000jq\u0000~"
+"\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0080sq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000"
+"Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000fMemberWarnCountq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q"
+"\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0080sq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`"
+"t\u0000\u000fMemberVoteCountq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~"
+"\u0000\u0080sq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0014MemberVoteTota"
+"lStarsq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0080sq\u0000~\u0000Sppsq"
+"\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0012MemberRewardPointsq\u0000~\u0000jq\u0000~"
+"\u0000fsq\u0000~\u0000:pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fs"
+"q\u0000~\u0000`t\u0000\u000bMemberTitleq\u0000~\u0000jsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000?p"
+"psr\u0000#com.sun.msv.datatype.xsd.DoubleType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.s"
+"un.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000Dq\u0000~\u0000J"
+"t\u0000\u0006doubleq\u0000~\u0000^q\u0000~\u0000Psq\u0000~\u0000Qq\u0000~\u0001Eq\u0000~\u0000Jsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Y"
+"q\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000eMemberTimeZoneq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~"
+"\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000"
+"\u000fMemberSignatureq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000B"
+"sq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\fMemberAvatarq\u0000~\u0000"
+"jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xp"
+"q\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\nMemberSkinq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000"
+"~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t"
+"\u0000\u000eMemberLanguageq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000:pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~"
+"\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000fMemberFirstnameq\u0000~\u0000jsq\u0000~\u0000:pp"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000eMe"
+"mberLastnameq\u0000~\u0000jsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0080sq\u0000~\u0000Spps"
+"q\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\fMemberGenderq\u0000~\u0000jq\u0000~\u0000fsq\u0000"
+"~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000"
+"bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000eMemberBirthdayq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\rMem"
+"berAddressq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000S"
+"ppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\nMemberCityq\u0000~\u0000jq\u0000~\u0000fsq"
+"\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~"
+"\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000bMemberStateq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq"
+"\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\rMembe"
+"rCountryq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Spp"
+"sq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000bMemberPhoneq\u0000~\u0000jq\u0000~\u0000fsq\u0000"
+"~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000"
+"bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\fMemberMobileq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq"
+"\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\tMembe"
+"rFaxq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~"
+"\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\fMemberCareerq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000S"
+"ppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000"
+"~\u0000fsq\u0000~\u0000`t\u0000\u000eMemberHomepageq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000"
+"~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000bMember"
+"Yahooq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000"
+"~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\tMemberAolq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Spp"
+"sq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000"
+"fsq\u0000~\u0000`t\u0000\tMemberIcqq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000"
+"~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\tMemberMsnq\u0000~\u0000"
+"jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xp"
+"q\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000fMemberCoolLink1q\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000"
+"~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Bsq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq"
+"\u0000~\u0000`t\u0000\u000fMemberCoolLink2q\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000:pp\u0000sq\u0000~\u0000Sppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003q\u0000~\u0000Xpsq\u0000~\u0000Uq\u0000~\u0000Xpsr\u00002com.sun.msv.grammar.Expression$An"
+"yStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000gpsr\u0000 com.sun.msv.gram"
+"mar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000aq\u0000~\u0000fsq\u0000~\u0000`t\u0000)com.mvnforum."
+"jaxb.db.GlobalPermissionListt\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0014Gl"
+"obalPermissionListq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000:pp\u0000sq\u0000~\u0000Sppsq\u0000~\u0001\u00efq\u0000~\u0000Xpsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0001\u00f4q\u0000~\u0001\u00f6q\u0000~\u0000fsq\u0000~\u0000`t"
+"\u0000&com.mvnforum.jaxb.db.MessageFolderListq\u0000~\u0001\u00f9sq\u0000~\u0000Sppsq\u0000~\u0000Uq"
+"\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u0011MessageFolderListq\u0000~\u0000jq\u0000~\u0000fsq\u0000~"
+"\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000:pp\u0000sq\u0000~\u0000Sppsq\u0000~\u0001\u00efq\u0000~\u0000Xpsq\u0000~\u0000U"
+"q\u0000~\u0000Xpq\u0000~\u0001\u00f4q\u0000~\u0001\u00f6q\u0000~\u0000fsq\u0000~\u0000`t\u0000$com.mvnforum.jaxb.db.GlobalWat"
+"chListq\u0000~\u0001\u00f9sq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000fGloba"
+"lWatchListq\u0000~\u0000jq\u0000~\u0000fsq\u0000~\u0000Sppsq\u0000~\u0000:q\u0000~\u0000Xp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000:pp\u0000sq"
+"\u0000~\u0000Sppsq\u0000~\u0001\u00efq\u0000~\u0000Xpsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0001\u00f4q\u0000~\u0001\u00f6q\u0000~\u0000fsq\u0000~\u0000`t\u0000 com.mv"
+"nforum.jaxb.db.MessageListq\u0000~\u0001\u00f9sq\u0000~\u0000Sppsq\u0000~\u0000Uq\u0000~\u0000Xpq\u0000~\u0000Yq\u0000~\u0000"
+"bq\u0000~\u0000fsq\u0000~\u0000`t\u0000\u000bMessageListq\u0000~\u0000jq\u0000~\u0000fsr\u0000\"com.sun.msv.grammar."
+"ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/"
+"ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressi"
+"onPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006paren"
+"tt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u00d8\u0001pq\u0000~\u0000\tq\u0000~\u0000)q\u0000"
+"~\u0000\u001dq\u0000~\u0000\u000bq\u0000~\u0000\u0016q\u0000~\u00013q\u0000~\u0001,q\u0000~\u0001%q\u0000~\u0001\u001eq\u0000~\u0001\u0017q\u0000~\u0001\u0010q\u0000~\u0001\tq\u0000~\u0000\u007fq\u0000~\u0000\u00aeq\u0000"
+"~\u0000\u00c3q\u0000~\u0000\u00caq\u0000~\u0000\u00edq\u0000~\u0000\u00f4q\u0000~\u0001uq\u0000~\u0001\u00eaq\u0000~\u0001\u00feq\u0000~\u0002\u000bq\u0000~\u0002\u0018q\u0000~\u0000 q\u0000~\u0000\rq\u0000~\u0000\bq\u0000"
+"~\u0000\nq\u0000~\u0000\u0010q\u0000~\u0000\u0015q\u0000~\u0000%q\u0000~\u00000q\u0000~\u0000/q\u0000~\u00001q\u0000~\u00005q\u0000~\u0000$q\u0000~\u0000\u0012q\u0000~\u0000-q\u0000~\u0000\u0006q\u0000"
+"~\u0000+q\u0000~\u00011q\u0000~\u0001*q\u0000~\u0001#q\u0000~\u0001\u001cq\u0000~\u0001\u0015q\u0000~\u0001\u000eq\u0000~\u0001\u0007q\u0000~\u0000\u00f2q\u0000~\u0000}q\u0000~\u0000\u00acq\u0000~\u0000\u00c1q\u0000"
+"~\u0000\u00c8q\u0000~\u0000\u00ebq\u0000~\u0001sq\u0000~\u0000!q\u0000~\u0000#q\u0000~\u0001\u00ecq\u0000~\u00003q\u0000~\u0002\u0000q\u0000~\u0002\rq\u0000~\u0002\u001aq\u0000~\u0001@q\u0000~\u0000\"q\u0000"
+"~\u0000\fq\u0000~\u0000\'q\u0000~\u0000\u001aq\u0000~\u0000&q\u0000~\u0000\u0007q\u0000~\u0001\\q\u0000~\u0001Uq\u0000~\u0001Nq\u0000~\u0001Gq\u0000~\u0001:q\u0000~\u00014q\u0000~\u0001-q\u0000"
+"~\u0001&q\u0000~\u0001\u001fq\u0000~\u0001\u0018q\u0000~\u0001\u0011q\u0000~\u0001\nq\u0000~\u0001\u0003q\u0000~\u0000(q\u0000~\u0000\u00fcq\u0000~\u0000Tq\u0000~\u0000mq\u0000~\u0000sq\u0000~\u0000yq\u0000"
+"~\u0000\u00a8q\u0000~\u0000\u00afq\u0000~\u0000\u00b6q\u0000~\u0000\u00bdq\u0000~\u0000\u00c4q\u0000~\u0000\u00cbq\u0000~\u0000\u00d2q\u0000~\u0000\u00d9q\u0000~\u0000\u00e0q\u0000~\u0000\u00e7q\u0000~\u0000\u00eeq\u0000~\u0000\u00f5q\u0000"
+"~\u0001cq\u0000~\u0000\u001cq\u0000~\u0001iq\u0000~\u0001oq\u0000~\u0001vq\u0000~\u0001}q\u0000~\u0001\u0084q\u0000~\u0001\u008bq\u0000~\u0001\u0092q\u0000~\u0001\u0099q\u0000~\u0001\u00a0q\u0000~\u0000\u0013q\u0000"
+"~\u0001\u00a7q\u0000~\u0001\u00aeq\u0000~\u0001\u00b5q\u0000~\u0001\u00bcq\u0000~\u0001\u00c3q\u0000~\u0001\u00caq\u0000~\u0001\u00d1q\u0000~\u0001\u00d8q\u0000~\u0001\u00dfq\u0000~\u0001\u00e6q\u0000~\u0001\u00f1q\u0000~\u0001\u00faq\u0000"
+"~\u0002\u0003q\u0000~\u0002\u0007q\u0000~\u0002\u0010q\u0000~\u0002\u0014q\u0000~\u0002\u001dq\u0000~\u0000\u001fq\u0000~\u0002!q\u0000~\u00004q\u0000~\u0000\u0005q\u0000~\u0000.q\u0000~\u0000*q\u0000~\u00006q\u0000"
+"~\u0001Yq\u0000~\u0001Rq\u0000~\u0001Kq\u0000~\u0001\u0000q\u0000~\u0000\u00f9q\u0000~\u0000\u00b3q\u0000~\u0001>q\u0000~\u0000\u00baq\u0000~\u0000\u00cfq\u0000~\u0000\u00d6q\u0000~\u0000\u00ddq\u0000~\u0000\u00e4q\u0000"
+"~\u0001`q\u0000~\u0000\u0019q\u0000~\u0001zq\u0000~\u00008q\u0000~\u0001\u0081q\u0000~\u0001\u0088q\u0000~\u0001\u008fq\u0000~\u0001\u0096q\u0000~\u0000\u0014q\u0000~\u0001\u009dq\u0000~\u0001\u00a4q\u0000~\u0001\u00abq\u0000"
+"~\u0001\u00b2q\u0000~\u0001\u00b9q\u0000~\u0001\u00c0q\u0000~\u0000\u000eq\u0000~\u0001\u00c7q\u0000~\u00007q\u0000~\u0001\u00ceq\u0000~\u0001\u00d5q\u0000~\u0001\u00dcq\u0000~\u0001\u00e3q\u0000~\u0000,q\u0000~\u0000\u000fq\u0000"
+"~\u00002q\u0000~\u0000\u0018q\u0000~\u0001\u00eeq\u0000~\u0002\u0002q\u0000~\u0000\u0017q\u0000~\u0002\u000fq\u0000~\u0002\u001cq\u0000~\u0000\u0011q\u0000~\u0000\u001eq\u0000~\u0000\u001bq\u0000~\u00009q\u0000~\u0001[q\u0000"
+"~\u0001Tq\u0000~\u0001Mq\u0000~\u00019q\u0000~\u0001\u0002q\u0000~\u0000\u00fbq\u0000~\u0000>q\u0000~\u0000lq\u0000~\u0000rq\u0000~\u0000xq\u0000~\u0000\u00b5q\u0000~\u0000\u00bcq\u0000~\u0000\u00d1q\u0000"
+"~\u0000\u00d8q\u0000~\u0000\u00dfq\u0000~\u0000\u00e6q\u0000~\u0001bq\u0000~\u0001hq\u0000~\u0001nq\u0000~\u0001|q\u0000~\u0001\u0083q\u0000~\u0001\u008aq\u0000~\u0001\u0091q\u0000~\u0001\u0098q\u0000~\u0001\u009fq\u0000"
+"~\u0001\u00a6q\u0000~\u0001\u00adq\u0000~\u0001\u00b4q\u0000~\u0001\u00bbq\u0000~\u0001\u00c2q\u0000~\u0001\u00c9q\u0000~\u0001\u00d0q\u0000~\u0001\u00d7q\u0000~\u0001\u00deq\u0000~\u0001\u00e5x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.mvnforum.jaxb.db.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.mvnforum.jaxb.db.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------------------------------------------------------------------------------------------------------------------------------------------");
        }

        protected Unmarshaller(com.mvnforum.jaxb.db.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.mvnforum.jaxb.db.impl.MemberTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  81 :
                        if (("MemberSignature" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 82;
                            return ;
                        }
                        state = 84;
                        continue outer;
                    case  114 :
                        if (("MemberCountry" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 115;
                            return ;
                        }
                        state = 117;
                        continue outer;
                    case  48 :
                        if (("MemberActivateCode" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 49;
                            return ;
                        }
                        state = 51;
                        continue outer;
                    case  24 :
                        if (("MemberViewCount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  78 :
                        if (("MemberTimeZone" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 79;
                            return ;
                        }
                        state = 81;
                        continue outer;
                    case  162 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  18 :
                        if (("MemberFirstIP" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  157 :
                        if (("GlobalWatch" == ___local)&&("" == ___uri)) {
                            _GlobalWatchList = ((com.mvnforum.jaxb.db.impl.GlobalWatchListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.GlobalWatchListImpl.class), 158, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _GlobalWatchList = ((com.mvnforum.jaxb.db.impl.GlobalWatchListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.GlobalWatchListImpl.class), 158, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  27 :
                        if (("MemberPostCount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  51 :
                        if (("MemberTempPassword" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 52;
                            return ;
                        }
                        state = 54;
                        continue outer;
                    case  135 :
                        if (("MemberAol" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 136;
                            return ;
                        }
                        state = 138;
                        continue outer;
                    case  151 :
                        if (("GlobalPermission" == ___local)&&("" == ___uri)) {
                            _GlobalPermissionList = ((com.mvnforum.jaxb.db.impl.GlobalPermissionListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.GlobalPermissionListImpl.class), 152, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _GlobalPermissionList = ((com.mvnforum.jaxb.db.impl.GlobalPermissionListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.GlobalPermissionListImpl.class), 152, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  57 :
                        if (("MemberMessageOption" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 58;
                            return ;
                        }
                        state = 60;
                        continue outer;
                    case  111 :
                        if (("MemberState" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 112;
                            return ;
                        }
                        state = 114;
                        continue outer;
                    case  42 :
                        if (("MemberOption" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  156 :
                        if (("GlobalWatchList" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 157;
                            return ;
                        }
                        state = 159;
                        continue outer;
                    case  9 :
                        if (("MemberEmail" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                    case  129 :
                        if (("MemberHomepage" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 130;
                            return ;
                        }
                        state = 132;
                        continue outer;
                    case  93 :
                        if (("MemberFirstname" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 94;
                            return ;
                        }
                        break;
                    case  15 :
                        if (("MemberNameVisible" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  87 :
                        if (("MemberSkin" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 88;
                            return ;
                        }
                        state = 90;
                        continue outer;
                    case  66 :
                        if (("MemberVoteCount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 67;
                            return ;
                        }
                        state = 69;
                        continue outer;
                    case  160 :
                        if (("Message" == ___local)&&("" == ___uri)) {
                            _MessageList = ((com.mvnforum.jaxb.db.impl.MessageListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.MessageListImpl.class), 161, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _MessageList = ((com.mvnforum.jaxb.db.impl.MessageListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.MessageListImpl.class), 161, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  6 :
                        if (("MemberFirstEmail" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                    case  96 :
                        if (("MemberLastname" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 97;
                            return ;
                        }
                        break;
                    case  39 :
                        if (("MemberLastLogon" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  153 :
                        if (("MessageFolderList" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 154;
                            return ;
                        }
                        state = 156;
                        continue outer;
                    case  150 :
                        if (("GlobalPermissionList" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 151;
                            return ;
                        }
                        state = 153;
                        continue outer;
                    case  120 :
                        if (("MemberMobile" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 121;
                            return ;
                        }
                        state = 123;
                        continue outer;
                    case  102 :
                        if (("MemberBirthday" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 103;
                            return ;
                        }
                        state = 105;
                        continue outer;
                    case  154 :
                        if (("MessageFolder" == ___local)&&("" == ___uri)) {
                            _MessageFolderList = ((com.mvnforum.jaxb.db.impl.MessageFolderListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.MessageFolderListImpl.class), 155, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _MessageFolderList = ((com.mvnforum.jaxb.db.impl.MessageFolderListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.MessageFolderListImpl.class), 155, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  126 :
                        if (("MemberCareer" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 127;
                            return ;
                        }
                        state = 129;
                        continue outer;
                    case  63 :
                        if (("MemberWarnCount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 64;
                            return ;
                        }
                        state = 66;
                        continue outer;
                    case  147 :
                        if (("MemberCoolLink2" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 148;
                            return ;
                        }
                        state = 150;
                        continue outer;
                    case  90 :
                        if (("MemberLanguage" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 91;
                            return ;
                        }
                        state = 93;
                        continue outer;
                    case  123 :
                        if (("MemberFax" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 124;
                            return ;
                        }
                        state = 126;
                        continue outer;
                    case  105 :
                        if (("MemberAddress" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 106;
                            return ;
                        }
                        state = 108;
                        continue outer;
                    case  117 :
                        if (("MemberPhone" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 118;
                            return ;
                        }
                        state = 120;
                        continue outer;
                    case  30 :
                        if (("MemberCreationDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  12 :
                        if (("MemberEmailVisible" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        if (("MemberName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        break;
                    case  54 :
                        if (("MemberMessageCount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 55;
                            return ;
                        }
                        state = 57;
                        continue outer;
                    case  69 :
                        if (("MemberVoteTotalStars" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 70;
                            return ;
                        }
                        state = 72;
                        continue outer;
                    case  75 :
                        if (("MemberTitle" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 76;
                            return ;
                        }
                        break;
                    case  141 :
                        if (("MemberMsn" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 142;
                            return ;
                        }
                        state = 144;
                        continue outer;
                    case  21 :
                        if (("MemberLastIP" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  144 :
                        if (("MemberCoolLink1" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 145;
                            return ;
                        }
                        state = 147;
                        continue outer;
                    case  36 :
                        if (("MemberExpireDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  108 :
                        if (("MemberCity" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 109;
                            return ;
                        }
                        state = 111;
                        continue outer;
                    case  72 :
                        if (("MemberRewardPoints" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 73;
                            return ;
                        }
                        state = 75;
                        continue outer;
                    case  45 :
                        if (("MemberStatus" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        state = 48;
                        continue outer;
                    case  60 :
                        if (("MemberPostsPerPage" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 61;
                            return ;
                        }
                        state = 63;
                        continue outer;
                    case  138 :
                        if (("MemberIcq" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 139;
                            return ;
                        }
                        state = 141;
                        continue outer;
                    case  159 :
                        if (("MessageList" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 160;
                            return ;
                        }
                        state = 162;
                        continue outer;
                    case  132 :
                        if (("MemberYahoo" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 133;
                            return ;
                        }
                        state = 135;
                        continue outer;
                    case  84 :
                        if (("MemberAvatar" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 85;
                            return ;
                        }
                        state = 87;
                        continue outer;
                    case  33 :
                        if (("MemberModifiedDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  3 :
                        if (("MemberPassword" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        break;
                    case  99 :
                        if (("MemberGender" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 100;
                            return ;
                        }
                        state = 102;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  81 :
                        state = 84;
                        continue outer;
                    case  114 :
                        state = 117;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  44 :
                        if (("MemberOption" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  78 :
                        state = 81;
                        continue outer;
                    case  162 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  152 :
                        if (("GlobalPermissionList" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 153;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  157 :
                        _GlobalWatchList = ((com.mvnforum.jaxb.db.impl.GlobalWatchListImpl) spawnChildFromLeaveElement((com.mvnforum.jaxb.db.impl.GlobalWatchListImpl.class), 158, ___uri, ___local, ___qname));
                        return ;
                    case  134 :
                        if (("MemberYahoo" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 135;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("MemberFirstIP" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  59 :
                        if (("MemberMessageOption" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 60;
                            return ;
                        }
                        break;
                    case  98 :
                        if (("MemberLastname" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 99;
                            return ;
                        }
                        break;
                    case  135 :
                        state = 138;
                        continue outer;
                    case  151 :
                        _GlobalPermissionList = ((com.mvnforum.jaxb.db.impl.GlobalPermissionListImpl) spawnChildFromLeaveElement((com.mvnforum.jaxb.db.impl.GlobalPermissionListImpl.class), 152, ___uri, ___local, ___qname));
                        return ;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  41 :
                        if (("MemberLastLogon" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  38 :
                        if (("MemberExpireDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  111 :
                        state = 114;
                        continue outer;
                    case  107 :
                        if (("MemberAddress" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 108;
                            return ;
                        }
                        break;
                    case  158 :
                        if (("GlobalWatchList" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 159;
                            return ;
                        }
                        break;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  156 :
                        state = 159;
                        continue outer;
                    case  32 :
                        if (("MemberCreationDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("MemberEmail" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  83 :
                        if (("MemberSignature" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 84;
                            return ;
                        }
                        break;
                    case  129 :
                        state = 132;
                        continue outer;
                    case  89 :
                        if (("MemberSkin" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 90;
                            return ;
                        }
                        break;
                    case  149 :
                        if (("MemberCoolLink2" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 150;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  160 :
                        _MessageList = ((com.mvnforum.jaxb.db.impl.MessageListImpl) spawnChildFromLeaveElement((com.mvnforum.jaxb.db.impl.MessageListImpl.class), 161, ___uri, ___local, ___qname));
                        return ;
                    case  125 :
                        if (("MemberFax" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 126;
                            return ;
                        }
                        break;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  92 :
                        if (("MemberLanguage" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 93;
                            return ;
                        }
                        break;
                    case  140 :
                        if (("MemberIcq" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 141;
                            return ;
                        }
                        break;
                    case  119 :
                        if (("MemberPhone" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 120;
                            return ;
                        }
                        break;
                    case  153 :
                        state = 156;
                        continue outer;
                    case  150 :
                        state = 153;
                        continue outer;
                    case  120 :
                        state = 123;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  154 :
                        _MessageFolderList = ((com.mvnforum.jaxb.db.impl.MessageFolderListImpl) spawnChildFromLeaveElement((com.mvnforum.jaxb.db.impl.MessageFolderListImpl.class), 155, ___uri, ___local, ___qname));
                        return ;
                    case  131 :
                        if (("MemberHomepage" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 132;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("MemberPostCount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("MemberName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  155 :
                        if (("MessageFolderList" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 156;
                            return ;
                        }
                        break;
                    case  126 :
                        state = 129;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  147 :
                        state = 150;
                        continue outer;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  161 :
                        if (("MessageList" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 162;
                            return ;
                        }
                        break;
                    case  123 :
                        state = 126;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  5 :
                        if (("MemberPassword" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  117 :
                        state = 120;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  146 :
                        if (("MemberCoolLink1" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 147;
                            return ;
                        }
                        break;
                    case  128 :
                        if (("MemberCareer" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 129;
                            return ;
                        }
                        break;
                    case  95 :
                        if (("MemberFirstname" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 96;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("MemberLastIP" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  62 :
                        if (("MemberPostsPerPage" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 63;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  86 :
                        if (("MemberAvatar" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 87;
                            return ;
                        }
                        break;
                    case  116 :
                        if (("MemberCountry" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 117;
                            return ;
                        }
                        break;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  47 :
                        if (("MemberStatus" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  69 :
                        state = 72;
                        continue outer;
                    case  8 :
                        if (("MemberFirstEmail" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  141 :
                        state = 144;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  68 :
                        if (("MemberVoteCount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 69;
                            return ;
                        }
                        break;
                    case  144 :
                        state = 147;
                        continue outer;
                    case  14 :
                        if (("MemberEmailVisible" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  143 :
                        if (("MemberMsn" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 144;
                            return ;
                        }
                        break;
                    case  77 :
                        if (("MemberTitle" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 78;
                            return ;
                        }
                        break;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  104 :
                        if (("MemberBirthday" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 105;
                            return ;
                        }
                        break;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  74 :
                        if (("MemberRewardPoints" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 75;
                            return ;
                        }
                        break;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  122 :
                        if (("MemberMobile" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 123;
                            return ;
                        }
                        break;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  138 :
                        state = 141;
                        continue outer;
                    case  50 :
                        if (("MemberActivateCode" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  159 :
                        state = 162;
                        continue outer;
                    case  132 :
                        state = 135;
                        continue outer;
                    case  65 :
                        if (("MemberWarnCount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 66;
                            return ;
                        }
                        break;
                    case  80 :
                        if (("MemberTimeZone" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 81;
                            return ;
                        }
                        break;
                    case  35 :
                        if (("MemberModifiedDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  113 :
                        if (("MemberState" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 114;
                            return ;
                        }
                        break;
                    case  56 :
                        if (("MemberMessageCount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 57;
                            return ;
                        }
                        break;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  101 :
                        if (("MemberGender" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 102;
                            return ;
                        }
                        break;
                    case  53 :
                        if (("MemberTempPassword" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 54;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("MemberNameVisible" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  71 :
                        if (("MemberVoteTotalStars" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 72;
                            return ;
                        }
                        break;
                    case  110 :
                        if (("MemberCity" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 111;
                            return ;
                        }
                        break;
                    case  26 :
                        if (("MemberViewCount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  137 :
                        if (("MemberAol" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 138;
                            return ;
                        }
                        break;
                    case  99 :
                        state = 102;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  81 :
                        state = 84;
                        continue outer;
                    case  114 :
                        state = 117;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  78 :
                        state = 81;
                        continue outer;
                    case  162 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  157 :
                        _GlobalWatchList = ((com.mvnforum.jaxb.db.impl.GlobalWatchListImpl) spawnChildFromEnterAttribute((com.mvnforum.jaxb.db.impl.GlobalWatchListImpl.class), 158, ___uri, ___local, ___qname));
                        return ;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  135 :
                        state = 138;
                        continue outer;
                    case  151 :
                        _GlobalPermissionList = ((com.mvnforum.jaxb.db.impl.GlobalPermissionListImpl) spawnChildFromEnterAttribute((com.mvnforum.jaxb.db.impl.GlobalPermissionListImpl.class), 152, ___uri, ___local, ___qname));
                        return ;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  111 :
                        state = 114;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  156 :
                        state = 159;
                        continue outer;
                    case  129 :
                        state = 132;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  160 :
                        _MessageList = ((com.mvnforum.jaxb.db.impl.MessageListImpl) spawnChildFromEnterAttribute((com.mvnforum.jaxb.db.impl.MessageListImpl.class), 161, ___uri, ___local, ___qname));
                        return ;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  153 :
                        state = 156;
                        continue outer;
                    case  150 :
                        state = 153;
                        continue outer;
                    case  120 :
                        state = 123;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  154 :
                        _MessageFolderList = ((com.mvnforum.jaxb.db.impl.MessageFolderListImpl) spawnChildFromEnterAttribute((com.mvnforum.jaxb.db.impl.MessageFolderListImpl.class), 155, ___uri, ___local, ___qname));
                        return ;
                    case  126 :
                        state = 129;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  147 :
                        state = 150;
                        continue outer;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  123 :
                        state = 126;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  117 :
                        state = 120;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  69 :
                        state = 72;
                        continue outer;
                    case  141 :
                        state = 144;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  144 :
                        state = 147;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  138 :
                        state = 141;
                        continue outer;
                    case  159 :
                        state = 162;
                        continue outer;
                    case  132 :
                        state = 135;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  99 :
                        state = 102;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  81 :
                        state = 84;
                        continue outer;
                    case  114 :
                        state = 117;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  78 :
                        state = 81;
                        continue outer;
                    case  162 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  157 :
                        _GlobalWatchList = ((com.mvnforum.jaxb.db.impl.GlobalWatchListImpl) spawnChildFromLeaveAttribute((com.mvnforum.jaxb.db.impl.GlobalWatchListImpl.class), 158, ___uri, ___local, ___qname));
                        return ;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  135 :
                        state = 138;
                        continue outer;
                    case  151 :
                        _GlobalPermissionList = ((com.mvnforum.jaxb.db.impl.GlobalPermissionListImpl) spawnChildFromLeaveAttribute((com.mvnforum.jaxb.db.impl.GlobalPermissionListImpl.class), 152, ___uri, ___local, ___qname));
                        return ;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  111 :
                        state = 114;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  156 :
                        state = 159;
                        continue outer;
                    case  129 :
                        state = 132;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  160 :
                        _MessageList = ((com.mvnforum.jaxb.db.impl.MessageListImpl) spawnChildFromLeaveAttribute((com.mvnforum.jaxb.db.impl.MessageListImpl.class), 161, ___uri, ___local, ___qname));
                        return ;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  153 :
                        state = 156;
                        continue outer;
                    case  150 :
                        state = 153;
                        continue outer;
                    case  120 :
                        state = 123;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  154 :
                        _MessageFolderList = ((com.mvnforum.jaxb.db.impl.MessageFolderListImpl) spawnChildFromLeaveAttribute((com.mvnforum.jaxb.db.impl.MessageFolderListImpl.class), 155, ___uri, ___local, ___qname));
                        return ;
                    case  126 :
                        state = 129;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  147 :
                        state = 150;
                        continue outer;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  123 :
                        state = 126;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  117 :
                        state = 120;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  69 :
                        state = 72;
                        continue outer;
                    case  141 :
                        state = 144;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  144 :
                        state = 147;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  138 :
                        state = 141;
                        continue outer;
                    case  159 :
                        state = 162;
                        continue outer;
                    case  132 :
                        state = 135;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  99 :
                        state = 102;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  61 :
                            state = 62;
                            eatText1(value);
                            return ;
                        case  40 :
                            state = 41;
                            eatText2(value);
                            return ;
                        case  81 :
                            state = 84;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText3(value);
                            return ;
                        case  100 :
                            state = 101;
                            eatText4(value);
                            return ;
                        case  114 :
                            state = 117;
                            continue outer;
                        case  48 :
                            state = 51;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  127 :
                            state = 128;
                            eatText5(value);
                            return ;
                        case  82 :
                            state = 83;
                            eatText6(value);
                            return ;
                        case  78 :
                            state = 81;
                            continue outer;
                        case  94 :
                            state = 95;
                            eatText7(value);
                            return ;
                        case  162 :
                            revertToParentFromText(value);
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  157 :
                            _GlobalWatchList = ((com.mvnforum.jaxb.db.impl.GlobalWatchListImpl) spawnChildFromText((com.mvnforum.jaxb.db.impl.GlobalWatchListImpl.class), 158, value));
                            return ;
                        case  97 :
                            state = 98;
                            eatText8(value);
                            return ;
                        case  70 :
                            state = 71;
                            eatText9(value);
                            return ;
                        case  73 :
                            state = 74;
                            eatText10(value);
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  51 :
                            state = 54;
                            continue outer;
                        case  130 :
                            state = 131;
                            eatText11(value);
                            return ;
                        case  135 :
                            state = 138;
                            continue outer;
                        case  151 :
                            _GlobalPermissionList = ((com.mvnforum.jaxb.db.impl.GlobalPermissionListImpl) spawnChildFromText((com.mvnforum.jaxb.db.impl.GlobalPermissionListImpl.class), 152, value));
                            return ;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  111 :
                            state = 114;
                            continue outer;
                        case  37 :
                            state = 38;
                            eatText12(value);
                            return ;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  4 :
                            state = 5;
                            eatText13(value);
                            return ;
                        case  156 :
                            state = 159;
                            continue outer;
                        case  145 :
                            state = 146;
                            eatText14(value);
                            return ;
                        case  64 :
                            state = 65;
                            eatText15(value);
                            return ;
                        case  79 :
                            state = 80;
                            eatText16(value);
                            return ;
                        case  129 :
                            state = 132;
                            continue outer;
                        case  142 :
                            state = 143;
                            eatText17(value);
                            return ;
                        case  52 :
                            state = 53;
                            eatText18(value);
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  148 :
                            state = 149;
                            eatText19(value);
                            return ;
                        case  87 :
                            state = 90;
                            continue outer;
                        case  66 :
                            state = 69;
                            continue outer;
                        case  160 :
                            _MessageList = ((com.mvnforum.jaxb.db.impl.MessageListImpl) spawnChildFromText((com.mvnforum.jaxb.db.impl.MessageListImpl.class), 161, value));
                            return ;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  13 :
                            state = 14;
                            eatText20(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText21(value);
                            return ;
                        case  153 :
                            state = 156;
                            continue outer;
                        case  150 :
                            state = 153;
                            continue outer;
                        case  120 :
                            state = 123;
                            continue outer;
                        case  102 :
                            state = 105;
                            continue outer;
                        case  154 :
                            _MessageFolderList = ((com.mvnforum.jaxb.db.impl.MessageFolderListImpl) spawnChildFromText((com.mvnforum.jaxb.db.impl.MessageFolderListImpl.class), 155, value));
                            return ;
                        case  106 :
                            state = 107;
                            eatText22(value);
                            return ;
                        case  126 :
                            state = 129;
                            continue outer;
                        case  63 :
                            state = 66;
                            continue outer;
                        case  147 :
                            state = 150;
                            continue outer;
                        case  90 :
                            state = 93;
                            continue outer;
                        case  123 :
                            state = 126;
                            continue outer;
                        case  105 :
                            state = 108;
                            continue outer;
                        case  117 :
                            state = 120;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  112 :
                            state = 113;
                            eatText23(value);
                            return ;
                        case  115 :
                            state = 116;
                            eatText24(value);
                            return ;
                        case  49 :
                            state = 50;
                            eatText25(value);
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  54 :
                            state = 57;
                            continue outer;
                        case  103 :
                            state = 104;
                            eatText26(value);
                            return ;
                        case  67 :
                            state = 68;
                            eatText27(value);
                            return ;
                        case  55 :
                            state = 56;
                            eatText28(value);
                            return ;
                        case  69 :
                            state = 72;
                            continue outer;
                        case  28 :
                            state = 29;
                            eatText29(value);
                            return ;
                        case  141 :
                            state = 144;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText30(value);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  58 :
                            state = 59;
                            eatText31(value);
                            return ;
                        case  144 :
                            state = 147;
                            continue outer;
                        case  34 :
                            state = 35;
                            eatText32(value);
                            return ;
                        case  22 :
                            state = 23;
                            eatText33(value);
                            return ;
                        case  124 :
                            state = 125;
                            eatText34(value);
                            return ;
                        case  139 :
                            state = 140;
                            eatText35(value);
                            return ;
                        case  109 :
                            state = 110;
                            eatText36(value);
                            return ;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  108 :
                            state = 111;
                            continue outer;
                        case  46 :
                            state = 47;
                            eatText37(value);
                            return ;
                        case  88 :
                            state = 89;
                            eatText38(value);
                            return ;
                        case  72 :
                            state = 75;
                            continue outer;
                        case  76 :
                            state = 77;
                            eatText39(value);
                            return ;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  60 :
                            state = 63;
                            continue outer;
                        case  138 :
                            state = 141;
                            continue outer;
                        case  159 :
                            state = 162;
                            continue outer;
                        case  132 :
                            state = 135;
                            continue outer;
                        case  136 :
                            state = 137;
                            eatText40(value);
                            return ;
                        case  133 :
                            state = 134;
                            eatText41(value);
                            return ;
                        case  121 :
                            state = 122;
                            eatText42(value);
                            return ;
                        case  16 :
                            state = 17;
                            eatText43(value);
                            return ;
                        case  84 :
                            state = 87;
                            continue outer;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  31 :
                            state = 32;
                            eatText44(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText45(value);
                            return ;
                        case  118 :
                            state = 119;
                            eatText46(value);
                            return ;
                        case  91 :
                            state = 92;
                            eatText47(value);
                            return ;
                        case  25 :
                            state = 26;
                            eatText48(value);
                            return ;
                        case  85 :
                            state = 86;
                            eatText49(value);
                            return ;
                        case  99 :
                            state = 102;
                            continue outer;
                        case  43 :
                            state = 44;
                            eatText50(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberPostsPerPage = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberPostsPerPage = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberLastLogon = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberFirstEmail = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberGender = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberGender = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberCareer = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberSignature = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberFirstname = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberLastname = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberVoteTotalStars = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberVoteTotalStars = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberRewardPoints = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberRewardPoints = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberHomepage = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberExpireDate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberPassword = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberCoolLink1 = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberWarnCount = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberWarnCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberTimeZone = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberTimeZone = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberMsn = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText18(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberTempPassword = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText19(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberCoolLink2 = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText20(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberEmailVisible = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberEmailVisible = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText21(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText22(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberAddress = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText23(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberState = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText24(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberCountry = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText25(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberActivateCode = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText26(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberBirthday = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText27(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberVoteCount = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberVoteCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText28(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberMessageCount = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberMessageCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText29(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberPostCount = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberPostCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText30(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberEmail = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText31(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberMessageOption = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberMessageOption = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText32(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberModifiedDate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText33(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberLastIP = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText34(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberFax = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText35(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberIcq = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText36(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberCity = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText37(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberStatus = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberStatus = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText38(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberSkin = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText39(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberTitle = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText40(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberAol = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText41(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberYahoo = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText42(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberMobile = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText43(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberNameVisible = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberNameVisible = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText44(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberCreationDate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText45(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberFirstIP = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText46(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberPhone = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText47(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberLanguage = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText48(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberViewCount = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberViewCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText49(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberAvatar = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText50(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberOption = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MemberOption = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}

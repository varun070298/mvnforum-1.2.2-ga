//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.12.29 at 03:19:11 PM GMT+07:00 
//


package com.mvnforum.jaxb.db.impl;

public class MessageTypeImpl implements com.mvnforum.jaxb.db.MessageType, com.sun.xml.bind.JAXBObject, com.mvnforum.jaxb.db.impl.runtime.UnmarshallableObject, com.mvnforum.jaxb.db.impl.runtime.XMLSerializable, com.mvnforum.jaxb.db.impl.runtime.ValidatableObject
{

    protected boolean has_MessageReadStatus;
    protected int _MessageReadStatus;
    protected java.lang.String _MessageIP;
    protected boolean has_MessageOption;
    protected int _MessageOption;
    protected boolean has_MessageStatus;
    protected int _MessageStatus;
    protected java.lang.String _MessageBody;
    protected java.lang.String _MessageBccList;
    protected java.lang.String _FolderName;
    protected java.lang.String _MessageTopic;
    protected java.lang.String _MessageSenderName;
    protected java.lang.String _MessageCcList;
    protected java.lang.String _MessageCreationDate;
    protected boolean has_MessageAttachCount;
    protected int _MessageAttachCount;
    protected boolean has_MessageType;
    protected int _MessageType;
    protected java.lang.String _MessageIcon;
    protected boolean has_MessageNotify;
    protected int _MessageNotify;
    protected java.lang.String _MessageToList;
    public final static java.lang.Class version = (com.mvnforum.jaxb.db.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.mvnforum.jaxb.db.MessageType.class);
    }

    public int getMessageReadStatus() {
        return _MessageReadStatus;
    }

    public void setMessageReadStatus(int value) {
        _MessageReadStatus = value;
        has_MessageReadStatus = true;
    }

    public java.lang.String getMessageIP() {
        return _MessageIP;
    }

    public void setMessageIP(java.lang.String value) {
        _MessageIP = value;
    }

    public int getMessageOption() {
        return _MessageOption;
    }

    public void setMessageOption(int value) {
        _MessageOption = value;
        has_MessageOption = true;
    }

    public int getMessageStatus() {
        return _MessageStatus;
    }

    public void setMessageStatus(int value) {
        _MessageStatus = value;
        has_MessageStatus = true;
    }

    public java.lang.String getMessageBody() {
        return _MessageBody;
    }

    public void setMessageBody(java.lang.String value) {
        _MessageBody = value;
    }

    public java.lang.String getMessageBccList() {
        return _MessageBccList;
    }

    public void setMessageBccList(java.lang.String value) {
        _MessageBccList = value;
    }

    public java.lang.String getFolderName() {
        return _FolderName;
    }

    public void setFolderName(java.lang.String value) {
        _FolderName = value;
    }

    public java.lang.String getMessageTopic() {
        return _MessageTopic;
    }

    public void setMessageTopic(java.lang.String value) {
        _MessageTopic = value;
    }

    public java.lang.String getMessageSenderName() {
        return _MessageSenderName;
    }

    public void setMessageSenderName(java.lang.String value) {
        _MessageSenderName = value;
    }

    public java.lang.String getMessageCcList() {
        return _MessageCcList;
    }

    public void setMessageCcList(java.lang.String value) {
        _MessageCcList = value;
    }

    public java.lang.String getMessageCreationDate() {
        return _MessageCreationDate;
    }

    public void setMessageCreationDate(java.lang.String value) {
        _MessageCreationDate = value;
    }

    public int getMessageAttachCount() {
        return _MessageAttachCount;
    }

    public void setMessageAttachCount(int value) {
        _MessageAttachCount = value;
        has_MessageAttachCount = true;
    }

    public int getMessageType() {
        return _MessageType;
    }

    public void setMessageType(int value) {
        _MessageType = value;
        has_MessageType = true;
    }

    public java.lang.String getMessageIcon() {
        return _MessageIcon;
    }

    public void setMessageIcon(java.lang.String value) {
        _MessageIcon = value;
    }

    public int getMessageNotify() {
        return _MessageNotify;
    }

    public void setMessageNotify(int value) {
        _MessageNotify = value;
        has_MessageNotify = true;
    }

    public java.lang.String getMessageToList() {
        return _MessageToList;
    }

    public void setMessageToList(java.lang.String value) {
        _MessageToList = value;
    }

    public com.mvnforum.jaxb.db.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.mvnforum.jaxb.db.impl.runtime.UnmarshallingContext context) {
        return new com.mvnforum.jaxb.db.impl.MessageTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.mvnforum.jaxb.db.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_FolderName!= null) {
            context.startElement("", "FolderName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _FolderName), "FolderName");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MessageSenderName!= null) {
            context.startElement("", "MessageSenderName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MessageSenderName), "MessageSenderName");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MessageToList!= null) {
            context.startElement("", "MessageToList");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MessageToList), "MessageToList");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MessageCcList!= null) {
            context.startElement("", "MessageCcList");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MessageCcList), "MessageCcList");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MessageBccList!= null) {
            context.startElement("", "MessageBccList");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MessageBccList), "MessageBccList");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MessageTopic!= null) {
            context.startElement("", "MessageTopic");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MessageTopic), "MessageTopic");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MessageBody!= null) {
            context.startElement("", "MessageBody");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MessageBody), "MessageBody");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MessageType) {
            context.startElement("", "MessageType");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MessageType)), "MessageType");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MessageOption) {
            context.startElement("", "MessageOption");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MessageOption)), "MessageOption");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MessageStatus) {
            context.startElement("", "MessageStatus");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MessageStatus)), "MessageStatus");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MessageReadStatus) {
            context.startElement("", "MessageReadStatus");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MessageReadStatus)), "MessageReadStatus");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MessageNotify) {
            context.startElement("", "MessageNotify");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MessageNotify)), "MessageNotify");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MessageIcon!= null) {
            context.startElement("", "MessageIcon");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MessageIcon), "MessageIcon");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MessageAttachCount) {
            context.startElement("", "MessageAttachCount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MessageAttachCount)), "MessageAttachCount");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MessageIP!= null) {
            context.startElement("", "MessageIP");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MessageIP), "MessageIP");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MessageCreationDate!= null) {
            context.startElement("", "MessageCreationDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MessageCreationDate), "MessageCreationDate");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.mvnforum.jaxb.db.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(com.mvnforum.jaxb.db.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.mvnforum.jaxb.db.MessageType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005v"
+"aluexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datat"
+"ype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/Str"
+"ing;L\u0000\btypeNameq\u0000~\u0000%L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xs"
+"d/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat"
+"\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pre"
+"serve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSet"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair"
+"\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xpq\u0000~\u0000)q\u0000~\u0000("
+"sq\u0000~\u0000\u0014ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0017xq\u0000~\u0000\u0003q\u0000~\u0000\u001bpsq\u0000~\u0000\u001dppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0005QNamesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000+q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u00007q\u0000~\u0000(sr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xr\u0000\u001dcom"
+".sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www."
+"w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u001a\u0001psq\u0000~\u0000;t\u0000\nFold"
+"erNamet\u0000\u0000q\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~"
+"\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0011MessageSenderNameq\u0000~\u0000Eq\u0000~\u0000As"
+"q\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000"
+"~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\rMessageToListq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\rMe"
+"ssageCcListq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000"
+"\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000eMessageBccListq\u0000~\u0000Eq\u0000"
+"~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~"
+"\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\fMessageTopicq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000"
+"\u000bMessageBodyq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpps"
+"r\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.ms"
+"v.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)"
+"Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0003intq\u0000"
+"~\u00009sr\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitVa"
+"luet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTyp"
+"eWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype"
+".xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValue"
+"CheckFlagL\u0000\bbaseTypeq\u0000~\u0000vL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/data"
+"type/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000%xq\u0000~\u0000$ppq\u0000~\u00009\u0000\u0001sr\u0000*co"
+"m.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000zppq"
+"\u0000~\u00009\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000u"
+"q\u0000~\u0000(t\u0000\u0004longq\u0000~\u00009sq\u0000~\u0000yppq\u0000~\u00009\u0000\u0001sq\u0000~\u0000\u0080ppq\u0000~\u00009\u0000\u0000sr\u0000$com.sun.m"
+"sv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000uq\u0000~\u0000(t\u0000\u0007integerq"
+"\u0000~\u00009sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalC"
+"onstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000}ppq\u0000~\u00009\u0001\u0000sr\u0000#com.sun.msv.data"
+"type.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0007decimalq\u0000~\u00009q\u0000~\u0000"
+"\u008et\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u0088t\u0000\fminInclusivesr\u0000\u000ejava.lang.Long"
+";\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"q\u0000~\u0000\u0088t\u0000\fmaxInclusivesq\u0000~\u0000\u0092\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u0083q\u0000~\u0000\u0091sr\u0000\u0011java.lang.In"
+"teger\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000\u0093\u0080\u0000\u0000\u0000q\u0000~\u0000\u0083q\u0000~\u0000\u0095sq\u0000~\u0000\u0097\u007f\u00ff\u00ff\u00ffq\u0000~\u0000.s"
+"q\u0000~\u0000/q\u0000~\u0000xq\u0000~\u0000(sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000bM"
+"essageTypeq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ssq\u0000~\u0000\u0014"
+"ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\rMessageOptionq\u0000~\u0000Eq\u0000~\u0000"
+"Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ssq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004"
+"q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\rMessageStatusq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000"
+"\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ssq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0011"
+"MessageReadStatusq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000"
+"ssq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\rMessageNotifyq\u0000"
+"~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000"
+"\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000bMessageIconq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000"
+"\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ssq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~"
+"\u0000;t\u0000\u0012MessageAttachCountq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000"
+"ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\tMessageIP"
+"q\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000"
+"~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0013MessageCreationDateq\u0000~\u0000Eq\u0000~\u0000Asr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\r"
+"streamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool"
+";xp\u0000\u0000\u0000?\u0001pq\u0000~\u0000\u00c4q\u0000~\u0000\u00b6q\u0000~\u0000\u00afq\u0000~\u0000\u00a8q\u0000~\u0000\u00a1q\u0000~\u0000rq\u0000~\u0000\u000bq\u0000~\u0000\u00c2q\u0000~\u0000\u00b4q\u0000~\u0000\u00adq"
+"\u0000~\u0000\u00a6q\u0000~\u0000\u009fq\u0000~\u0000\u0010q\u0000~\u0000pq\u0000~\u0000\u0005q\u0000~\u0000\rq\u0000~\u0000\u00ccq\u0000~\u0000\u00bbq\u0000~\u0000iq\u0000~\u0000bq\u0000~\u0000[q\u0000~\u0000Tq"
+"\u0000~\u0000Mq\u0000~\u0000Fq\u0000~\u0000\u0015q\u0000~\u0000\u00c5q\u0000~\u0000\u00beq\u0000~\u0000\u00b7q\u0000~\u0000\u00b0q\u0000~\u0000\u00a9q\u0000~\u0000\u00a2q\u0000~\u0000\u009bq\u0000~\u0000lq\u0000~\u0000\u0013q"
+"\u0000~\u0000eq\u0000~\u0000^q\u0000~\u0000Wq\u0000~\u0000Pq\u0000~\u0000Iq\u0000~\u00001q\u0000~\u0000\u00c9q\u0000~\u0000\u0006q\u0000~\u0000\u00d3q\u0000~\u0000\u00d0q\u0000~\u0000\nq\u0000~\u0000\tq"
+"\u0000~\u0000\fq\u0000~\u0000\u000fq\u0000~\u0000\bq\u0000~\u0000\u000eq\u0000~\u0000\u0011q\u0000~\u0000\u0007q\u0000~\u0000\u00cbq\u0000~\u0000\u00bdq\u0000~\u0000kq\u0000~\u0000dq\u0000~\u0000]q\u0000~\u0000Vq"
+"\u0000~\u0000Oq\u0000~\u0000Hq\u0000~\u0000\u0012q\u0000~\u0000\u001cq\u0000~\u0000\u00d2x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.mvnforum.jaxb.db.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.mvnforum.jaxb.db.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------------------------");
        }

        protected Unmarshaller(com.mvnforum.jaxb.db.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.mvnforum.jaxb.db.impl.MessageTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  30 :
                        if (("MessageReadStatus" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  15 :
                        if (("MessageTopic" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  33 :
                        if (("MessageNotify" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  9 :
                        if (("MessageCcList" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  21 :
                        if (("MessageType" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  36 :
                        if (("MessageIcon" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  3 :
                        if (("MessageSenderName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  12 :
                        if (("MessageBccList" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  24 :
                        if (("MessageOption" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  27 :
                        if (("MessageStatus" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  18 :
                        if (("MessageBody" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  0 :
                        if (("FolderName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  45 :
                        if (("MessageCreationDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        state = 48;
                        continue outer;
                    case  6 :
                        if (("MessageToList" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  39 :
                        if (("MessageAttachCount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  42 :
                        if (("MessageIP" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  48 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  17 :
                        if (("MessageTopic" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  2 :
                        if (("FolderName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  23 :
                        if (("MessageType" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  14 :
                        if (("MessageBccList" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  41 :
                        if (("MessageAttachCount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  47 :
                        if (("MessageCreationDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  11 :
                        if (("MessageCcList" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  44 :
                        if (("MessageIP" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  20 :
                        if (("MessageBody" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("MessageToList" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("MessageSenderName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  26 :
                        if (("MessageOption" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  38 :
                        if (("MessageIcon" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  32 :
                        if (("MessageReadStatus" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  35 :
                        if (("MessageNotify" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  29 :
                        if (("MessageStatus" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  48 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  30 :
                        state = 33;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  48 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  30 :
                        state = 33;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  48 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  22 :
                            state = 23;
                            eatText1(value);
                            return ;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  46 :
                            state = 47;
                            eatText2(value);
                            return ;
                        case  25 :
                            state = 26;
                            eatText3(value);
                            return ;
                        case  10 :
                            state = 11;
                            eatText4(value);
                            return ;
                        case  37 :
                            state = 38;
                            eatText5(value);
                            return ;
                        case  16 :
                            state = 17;
                            eatText6(value);
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  28 :
                            state = 29;
                            eatText7(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText8(value);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  13 :
                            state = 14;
                            eatText9(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText10(value);
                            return ;
                        case  40 :
                            state = 41;
                            eatText11(value);
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  31 :
                            state = 32;
                            eatText12(value);
                            return ;
                        case  34 :
                            state = 35;
                            eatText13(value);
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText14(value);
                            return ;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  43 :
                            state = 44;
                            eatText15(value);
                            return ;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  48 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText16(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageType = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MessageType = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageCreationDate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageOption = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MessageOption = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageCcList = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageIcon = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageTopic = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageStatus = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MessageStatus = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageSenderName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageBccList = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageBody = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageAttachCount = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MessageAttachCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageReadStatus = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MessageReadStatus = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageNotify = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MessageNotify = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageToList = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MessageIP = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FolderName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}

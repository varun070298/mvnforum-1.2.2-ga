//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.12.29 at 03:19:11 PM GMT+07:00 
//


package com.mvnforum.jaxb.db.impl;

public class ThreadTypeImpl implements com.mvnforum.jaxb.db.ThreadType, com.sun.xml.bind.JAXBObject, com.mvnforum.jaxb.db.impl.runtime.UnmarshallableObject, com.mvnforum.jaxb.db.impl.runtime.XMLSerializable, com.mvnforum.jaxb.db.impl.runtime.ValidatableObject
{

    protected boolean has_ThreadOption;
    protected int _ThreadOption;
    protected com.mvnforum.jaxb.db.PostList _PostList;
    protected boolean has_ThreadDuration;
    protected int _ThreadDuration;
    protected boolean has_ThreadStatus;
    protected int _ThreadStatus;
    protected boolean has_ThreadVoteCount;
    protected int _ThreadVoteCount;
    protected java.lang.String _ThreadCreationDate;
    protected boolean has_ThreadVoteTotalStars;
    protected int _ThreadVoteTotalStars;
    protected boolean has_ThreadHasPoll;
    protected int _ThreadHasPoll;
    protected boolean has_ThreadReplyCount;
    protected int _ThreadReplyCount;
    protected java.lang.String _ThreadLastPostDate;
    protected java.lang.String _ThreadBody;
    protected java.lang.String _MemberName;
    protected java.lang.String _ThreadLastPostMemberName;
    protected java.lang.String _ThreadTopic;
    protected com.mvnforum.jaxb.db.FavoriteThreadList _FavoriteThreadList;
    protected boolean has_ThreadType;
    protected int _ThreadType;
    protected java.lang.String _ThreadIcon;
    protected com.mvnforum.jaxb.db.ThreadWatchList _ThreadWatchList;
    protected boolean has_ThreadViewCount;
    protected int _ThreadViewCount;
    public final static java.lang.Class version = (com.mvnforum.jaxb.db.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.mvnforum.jaxb.db.ThreadType.class);
    }

    public int getThreadOption() {
        return _ThreadOption;
    }

    public void setThreadOption(int value) {
        _ThreadOption = value;
        has_ThreadOption = true;
    }

    public com.mvnforum.jaxb.db.PostList getPostList() {
        return _PostList;
    }

    public void setPostList(com.mvnforum.jaxb.db.PostList value) {
        _PostList = value;
    }

    public int getThreadDuration() {
        return _ThreadDuration;
    }

    public void setThreadDuration(int value) {
        _ThreadDuration = value;
        has_ThreadDuration = true;
    }

    public int getThreadStatus() {
        return _ThreadStatus;
    }

    public void setThreadStatus(int value) {
        _ThreadStatus = value;
        has_ThreadStatus = true;
    }

    public int getThreadVoteCount() {
        return _ThreadVoteCount;
    }

    public void setThreadVoteCount(int value) {
        _ThreadVoteCount = value;
        has_ThreadVoteCount = true;
    }

    public java.lang.String getThreadCreationDate() {
        return _ThreadCreationDate;
    }

    public void setThreadCreationDate(java.lang.String value) {
        _ThreadCreationDate = value;
    }

    public int getThreadVoteTotalStars() {
        return _ThreadVoteTotalStars;
    }

    public void setThreadVoteTotalStars(int value) {
        _ThreadVoteTotalStars = value;
        has_ThreadVoteTotalStars = true;
    }

    public int getThreadHasPoll() {
        return _ThreadHasPoll;
    }

    public void setThreadHasPoll(int value) {
        _ThreadHasPoll = value;
        has_ThreadHasPoll = true;
    }

    public int getThreadReplyCount() {
        return _ThreadReplyCount;
    }

    public void setThreadReplyCount(int value) {
        _ThreadReplyCount = value;
        has_ThreadReplyCount = true;
    }

    public java.lang.String getThreadLastPostDate() {
        return _ThreadLastPostDate;
    }

    public void setThreadLastPostDate(java.lang.String value) {
        _ThreadLastPostDate = value;
    }

    public java.lang.String getThreadBody() {
        return _ThreadBody;
    }

    public void setThreadBody(java.lang.String value) {
        _ThreadBody = value;
    }

    public java.lang.String getMemberName() {
        return _MemberName;
    }

    public void setMemberName(java.lang.String value) {
        _MemberName = value;
    }

    public java.lang.String getThreadLastPostMemberName() {
        return _ThreadLastPostMemberName;
    }

    public void setThreadLastPostMemberName(java.lang.String value) {
        _ThreadLastPostMemberName = value;
    }

    public java.lang.String getThreadTopic() {
        return _ThreadTopic;
    }

    public void setThreadTopic(java.lang.String value) {
        _ThreadTopic = value;
    }

    public com.mvnforum.jaxb.db.FavoriteThreadList getFavoriteThreadList() {
        return _FavoriteThreadList;
    }

    public void setFavoriteThreadList(com.mvnforum.jaxb.db.FavoriteThreadList value) {
        _FavoriteThreadList = value;
    }

    public int getThreadType() {
        return _ThreadType;
    }

    public void setThreadType(int value) {
        _ThreadType = value;
        has_ThreadType = true;
    }

    public java.lang.String getThreadIcon() {
        return _ThreadIcon;
    }

    public void setThreadIcon(java.lang.String value) {
        _ThreadIcon = value;
    }

    public com.mvnforum.jaxb.db.ThreadWatchList getThreadWatchList() {
        return _ThreadWatchList;
    }

    public void setThreadWatchList(com.mvnforum.jaxb.db.ThreadWatchList value) {
        _ThreadWatchList = value;
    }

    public int getThreadViewCount() {
        return _ThreadViewCount;
    }

    public void setThreadViewCount(int value) {
        _ThreadViewCount = value;
        has_ThreadViewCount = true;
    }

    public com.mvnforum.jaxb.db.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.mvnforum.jaxb.db.impl.runtime.UnmarshallingContext context) {
        return new com.mvnforum.jaxb.db.impl.ThreadTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.mvnforum.jaxb.db.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_MemberName!= null) {
            context.startElement("", "MemberName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MemberName), "MemberName");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ThreadLastPostMemberName!= null) {
            context.startElement("", "ThreadLastPostMemberName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ThreadLastPostMemberName), "ThreadLastPostMemberName");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "ThreadTopic");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _ThreadTopic), "ThreadTopic");
        } catch (java.lang.Exception e) {
            com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ThreadBody");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _ThreadBody), "ThreadBody");
        } catch (java.lang.Exception e) {
            com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (has_ThreadVoteCount) {
            context.startElement("", "ThreadVoteCount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ThreadVoteCount)), "ThreadVoteCount");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ThreadVoteTotalStars) {
            context.startElement("", "ThreadVoteTotalStars");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ThreadVoteTotalStars)), "ThreadVoteTotalStars");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ThreadCreationDate!= null) {
            context.startElement("", "ThreadCreationDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ThreadCreationDate), "ThreadCreationDate");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ThreadLastPostDate!= null) {
            context.startElement("", "ThreadLastPostDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ThreadLastPostDate), "ThreadLastPostDate");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ThreadType) {
            context.startElement("", "ThreadType");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ThreadType)), "ThreadType");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ThreadOption) {
            context.startElement("", "ThreadOption");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ThreadOption)), "ThreadOption");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ThreadStatus) {
            context.startElement("", "ThreadStatus");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ThreadStatus)), "ThreadStatus");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ThreadHasPoll) {
            context.startElement("", "ThreadHasPoll");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ThreadHasPoll)), "ThreadHasPoll");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ThreadViewCount) {
            context.startElement("", "ThreadViewCount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ThreadViewCount)), "ThreadViewCount");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ThreadReplyCount) {
            context.startElement("", "ThreadReplyCount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ThreadReplyCount)), "ThreadReplyCount");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ThreadIcon!= null) {
            context.startElement("", "ThreadIcon");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ThreadIcon), "ThreadIcon");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ThreadDuration) {
            context.startElement("", "ThreadDuration");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ThreadDuration)), "ThreadDuration");
            } catch (java.lang.Exception e) {
                com.mvnforum.jaxb.db.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ThreadWatchList!= null) {
            context.startElement("", "ThreadWatchList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ThreadWatchList), "ThreadWatchList");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ThreadWatchList), "ThreadWatchList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ThreadWatchList), "ThreadWatchList");
            context.endElement();
        }
        if (_FavoriteThreadList!= null) {
            context.startElement("", "FavoriteThreadList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FavoriteThreadList), "FavoriteThreadList");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FavoriteThreadList), "FavoriteThreadList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _FavoriteThreadList), "FavoriteThreadList");
            context.endElement();
        }
        if (_PostList!= null) {
            context.startElement("", "PostList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PostList), "PostList");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PostList), "PostList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _PostList), "PostList");
            context.endElement();
        }
    }

    public void serializeAttributes(com.mvnforum.jaxb.db.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(com.mvnforum.jaxb.db.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.mvnforum.jaxb.db.ThreadType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.gra"
+"mmar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatyp"
+"e;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000"
+"\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAl"
+"waysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnames"
+"paceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000(L\u0000\nwhiteSpacet\u0000."
+"Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://ww"
+"w.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd"
+".WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.gr"
+"ammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom"
+".sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000(L\u0000\fnames"
+"paceURIq\u0000~\u0000(xpq\u0000~\u0000,q\u0000~\u0000+sq\u0000~\u0000\u0017ppsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u001axq\u0000~\u0000\u0003q\u0000~\u0000\u001eps"
+"q\u0000~\u0000 ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000%q\u0000~\u0000+t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProces"
+"sor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00001sq\u0000~\u00002q\u0000~\u0000:q\u0000~\u0000+sr\u0000#com.su"
+"n.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000(L\u0000\f"
+"namespaceURIq\u0000~\u0000(xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000co"
+"m.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003sq\u0000~\u0000\u001d\u0001psq\u0000~\u0000>t\u0000\nMemberNamet\u0000\u0000q\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000s"
+"q\u0000~\u0000\u0000ppq\u0000~\u0000#sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0018Thre"
+"adLastPostMemberNameq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0019pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000#sq\u0000~\u0000\u0017pp"
+"sq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u000bThreadTopicq\u0000~\u0000Hsq\u0000~\u0000\u0019pp"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000#sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\nTh"
+"readBodyq\u0000~\u0000Hsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000 ppsr\u0000 com.su"
+"n.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatyp"
+"e.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/"
+"msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000%q\u0000~\u0000+t\u0000\u0003intq\u0000~\u0000<sr\u0000*co"
+"m.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.s"
+"un.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Lja"
+"va/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValu"
+"eConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Data"
+"TypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlag"
+"L\u0000\bbaseTypeq\u0000~\u0000bL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/"
+"ConcreteType;L\u0000\tfacetNameq\u0000~\u0000(xq\u0000~\u0000\'ppq\u0000~\u0000<\u0000\u0001sr\u0000*com.sun.msv"
+".datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000fppq\u0000~\u0000<\u0000\u0000sr\u0000"
+"!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000aq\u0000~\u0000+t\u0000\u0004l"
+"ongq\u0000~\u0000<sq\u0000~\u0000eppq\u0000~\u0000<\u0000\u0001sq\u0000~\u0000lppq\u0000~\u0000<\u0000\u0000sr\u0000$com.sun.msv.dataty"
+"pe.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000aq\u0000~\u0000+t\u0000\u0007integerq\u0000~\u0000<sr\u0000,c"
+"om.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005sca"
+"lexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraint"
+"FacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000ippq\u0000~\u0000<\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd."
+"NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000+t\u0000\u0007decimalq\u0000~\u0000<q\u0000~\u0000zt\u0000\u000efract"
+"ionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000tt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002"
+"\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000tt\u0000\fm"
+"axInclusivesq\u0000~\u0000~\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000oq\u0000~\u0000}sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4"
+"\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000\u007f\u0080\u0000\u0000\u0000q\u0000~\u0000oq\u0000~\u0000\u0081sq\u0000~\u0000\u0083\u007f\u00ff\u00ff\u00ffq\u0000~\u00001sq\u0000~\u00002q\u0000~\u0000"
+"dq\u0000~\u0000+sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u000fThreadVote"
+"Countq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u0017ppsq\u0000"
+"~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0014ThreadVoteTotalStarsq\u0000~\u0000Hq\u0000"
+"~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000#sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~"
+"\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0012ThreadCreationDateq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000#sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq"
+"\u0000~\u0000>t\u0000\u0012ThreadLastPostDateq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~"
+"\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\nThreadT"
+"ypeq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u0017ppsq\u0000~\u0000"
+"5q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\fThreadOptionq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017p"
+"psq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~"
+"\u0000Dsq\u0000~\u0000>t\u0000\fThreadStatusq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000"
+"ppq\u0000~\u0000_sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\rThreadHas"
+"Pollq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u0017ppsq\u0000~"
+"\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u000fThreadViewCountq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000"
+"~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000"
+"@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0010ThreadReplyCountq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001e"
+"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000#sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\nT"
+"hreadIconq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u0017p"
+"psq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u000eThreadDurationq\u0000~\u0000Hq\u0000~\u0000"
+"Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019pp\u0000sq\u0000~\u0000\u0017ppsr\u0000 com.sun.m"
+"sv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"
+"aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u001epsq\u0000~\u00005q\u0000~\u0000\u001epsr\u00002com."
+"sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003q\u0000~\u0000Epsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000?q\u0000~\u0000Dsq\u0000~\u0000>t\u0000$com.mvnforum.jaxb.db.ThreadWatchListt\u0000+http:"
+"//java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000"
+"~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u000fThreadWatchListq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019pp\u0000sq\u0000~\u0000\u0017ppsq\u0000~\u0000\u00ddq\u0000~\u0000\u001epsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~"
+"\u0000\u00e2q\u0000~\u0000\u00e4q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\'com.mvnforum.jaxb.db.FavoriteThreadList"
+"q\u0000~\u0000\u00e7sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0012FavoriteThr"
+"eadListq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019pp\u0000sq\u0000~\u0000"
+"\u0017ppsq\u0000~\u0000\u00ddq\u0000~\u0000\u001epsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u0000\u00e2q\u0000~\u0000\u00e4q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u001dcom.mvnfo"
+"rum.jaxb.db.PostListq\u0000~\u0000\u00e7sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000D"
+"sq\u0000~\u0000>t\u0000\bPostListq\u0000~\u0000Hq\u0000~\u0000Dsr\u0000\"com.sun.msv.grammar.Expressio"
+"nPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressio"
+"nPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Cl"
+"osedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/"
+"sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000O\u0001pq\u0000~\u0000\u0010q\u0000~\u0000\rq\u0000~\u0000\u00c5q\u0000~\u0000\u00beq"
+"\u0000~\u0000\u00b7q\u0000~\u0000\u00b0q\u0000~\u0000\u00a9q\u0000~\u0000\u00a2q\u0000~\u0000\u008dq\u0000~\u0000^q\u0000~\u0000\u00d3q\u0000~\u0000\u0015q\u0000~\u0000\u000eq\u0000~\u0000\u00c3q\u0000~\u0000\u00bcq\u0000~\u0000\u00b5q"
+"\u0000~\u0000\u00aeq\u0000~\u0000\u00a7q\u0000~\u0000\u00a0q\u0000~\u0000\u008bq\u0000~\u0000\\q\u0000~\u0000\u00d1q\u0000~\u0000\bq\u0000~\u0000\u00d8q\u0000~\u0000\u00ecq\u0000~\u0000\u00f9q\u0000~\u0000\u0006q\u0000~\u0000\u00cdq"
+"\u0000~\u0000\u00caq\u0000~\u0000\u0099q\u0000~\u0000\u0092q\u0000~\u0000\fq\u0000~\u0000Iq\u0000~\u0000\u0018q\u0000~\u0000\u00c6q\u0000~\u0000\u00bfq\u0000~\u0000\u00b8q\u0000~\u0000\u00b1q\u0000~\u0000\u00aaq\u0000~\u0000\u00a3q"
+"\u0000~\u0000\u009cq\u0000~\u0000\u0095q\u0000~\u0000\u008eq\u0000~\u0000\u0087q\u0000~\u0000\u0016q\u0000~\u0000Xq\u0000~\u0000Rq\u0000~\u0000Lq\u0000~\u00004q\u0000~\u0000\u0013q\u0000~\u0000\u00d4q\u0000~\u0000\u00e8q"
+"\u0000~\u0000\u00f5q\u0000~\u0001\u0002q\u0000~\u0000\u0012q\u0000~\u0000\u0014q\u0000~\u0000\u0007q\u0000~\u0000\u000fq\u0000~\u0000\u00dfq\u0000~\u0000\u00f1q\u0000~\u0000\u00feq\u0000~\u0000\u00daq\u0000~\u0000\u00eeq\u0000~\u0000\u00fbq"
+"\u0000~\u0000\tq\u0000~\u0000\u00dcq\u0000~\u0000\u00f0q\u0000~\u0000\u000bq\u0000~\u0000\u00fdq\u0000~\u0000\u0011q\u0000~\u0000\u00ccq\u0000~\u0000\u009bq\u0000~\u0000\u0094q\u0000~\u0000Wq\u0000~\u0000Qq\u0000~\u0000Kq"
+"\u0000~\u0000\u001fq\u0000~\u0000\nq\u0000~\u0000\u0005x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.mvnforum.jaxb.db.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.mvnforum.jaxb.db.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------------------------------");
        }

        protected Unmarshaller(com.mvnforum.jaxb.db.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.mvnforum.jaxb.db.impl.ThreadTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  48 :
                        if (("ThreadWatchList" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 49;
                            return ;
                        }
                        state = 51;
                        continue outer;
                    case  49 :
                        if (("ThreadWatch" == ___local)&&("" == ___uri)) {
                            _ThreadWatchList = ((com.mvnforum.jaxb.db.impl.ThreadWatchListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.ThreadWatchListImpl.class), 50, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ThreadWatchList = ((com.mvnforum.jaxb.db.impl.ThreadWatchListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.ThreadWatchListImpl.class), 50, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  52 :
                        if (("FavoriteThread" == ___local)&&("" == ___uri)) {
                            _FavoriteThreadList = ((com.mvnforum.jaxb.db.impl.FavoriteThreadListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.FavoriteThreadListImpl.class), 53, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _FavoriteThreadList = ((com.mvnforum.jaxb.db.impl.FavoriteThreadListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.FavoriteThreadListImpl.class), 53, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  51 :
                        if (("FavoriteThreadList" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 52;
                            return ;
                        }
                        state = 54;
                        continue outer;
                    case  6 :
                        if (("ThreadTopic" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                    case  57 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  18 :
                        if (("ThreadCreationDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  15 :
                        if (("ThreadVoteTotalStars" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  42 :
                        if (("ThreadIcon" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  0 :
                        if (("MemberName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        if (("ThreadBody" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                    case  39 :
                        if (("ThreadReplyCount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  45 :
                        if (("ThreadDuration" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        state = 48;
                        continue outer;
                    case  55 :
                        if (("Post" == ___local)&&("" == ___uri)) {
                            _PostList = ((com.mvnforum.jaxb.db.impl.PostListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.PostListImpl.class), 56, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _PostList = ((com.mvnforum.jaxb.db.impl.PostListImpl) spawnChildFromEnterElement((com.mvnforum.jaxb.db.impl.PostListImpl.class), 56, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  12 :
                        if (("ThreadVoteCount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  54 :
                        if (("PostList" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 55;
                            return ;
                        }
                        state = 57;
                        continue outer;
                    case  36 :
                        if (("ThreadViewCount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  27 :
                        if (("ThreadOption" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  24 :
                        if (("ThreadType" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  33 :
                        if (("ThreadHasPoll" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  21 :
                        if (("ThreadLastPostDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  3 :
                        if (("ThreadLastPostMemberName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  30 :
                        if (("ThreadStatus" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  48 :
                        state = 51;
                        continue outer;
                    case  17 :
                        if (("ThreadVoteTotalStars" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  49 :
                        _ThreadWatchList = ((com.mvnforum.jaxb.db.impl.ThreadWatchListImpl) spawnChildFromLeaveElement((com.mvnforum.jaxb.db.impl.ThreadWatchListImpl.class), 50, ___uri, ___local, ___qname));
                        return ;
                    case  38 :
                        if (("ThreadViewCount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  52 :
                        _FavoriteThreadList = ((com.mvnforum.jaxb.db.impl.FavoriteThreadListImpl) spawnChildFromLeaveElement((com.mvnforum.jaxb.db.impl.FavoriteThreadListImpl.class), 53, ___uri, ___local, ___qname));
                        return ;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  2 :
                        if (("MemberName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  53 :
                        if (("FavoriteThreadList" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 54;
                            return ;
                        }
                        break;
                    case  57 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  11 :
                        if (("ThreadBody" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  47 :
                        if (("ThreadDuration" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  55 :
                        _PostList = ((com.mvnforum.jaxb.db.impl.PostListImpl) spawnChildFromLeaveElement((com.mvnforum.jaxb.db.impl.PostListImpl.class), 56, ___uri, ___local, ___qname));
                        return ;
                    case  14 :
                        if (("ThreadVoteCount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  35 :
                        if (("ThreadHasPoll" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("ThreadCreationDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  50 :
                        if (("ThreadWatchList" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  26 :
                        if (("ThreadType" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  8 :
                        if (("ThreadTopic" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("ThreadStatus" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  29 :
                        if (("ThreadOption" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  41 :
                        if (("ThreadReplyCount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("ThreadLastPostMemberName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  56 :
                        if (("PostList" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 57;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("ThreadLastPostDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  44 :
                        if (("ThreadIcon" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  48 :
                        state = 51;
                        continue outer;
                    case  49 :
                        _ThreadWatchList = ((com.mvnforum.jaxb.db.impl.ThreadWatchListImpl) spawnChildFromEnterAttribute((com.mvnforum.jaxb.db.impl.ThreadWatchListImpl.class), 50, ___uri, ___local, ___qname));
                        return ;
                    case  52 :
                        _FavoriteThreadList = ((com.mvnforum.jaxb.db.impl.FavoriteThreadListImpl) spawnChildFromEnterAttribute((com.mvnforum.jaxb.db.impl.FavoriteThreadListImpl.class), 53, ___uri, ___local, ___qname));
                        return ;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  57 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  55 :
                        _PostList = ((com.mvnforum.jaxb.db.impl.PostListImpl) spawnChildFromEnterAttribute((com.mvnforum.jaxb.db.impl.PostListImpl.class), 56, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  48 :
                        state = 51;
                        continue outer;
                    case  49 :
                        _ThreadWatchList = ((com.mvnforum.jaxb.db.impl.ThreadWatchListImpl) spawnChildFromLeaveAttribute((com.mvnforum.jaxb.db.impl.ThreadWatchListImpl.class), 50, ___uri, ___local, ___qname));
                        return ;
                    case  52 :
                        _FavoriteThreadList = ((com.mvnforum.jaxb.db.impl.FavoriteThreadListImpl) spawnChildFromLeaveAttribute((com.mvnforum.jaxb.db.impl.FavoriteThreadListImpl.class), 53, ___uri, ___local, ___qname));
                        return ;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  57 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  55 :
                        _PostList = ((com.mvnforum.jaxb.db.impl.PostListImpl) spawnChildFromLeaveAttribute((com.mvnforum.jaxb.db.impl.PostListImpl.class), 56, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  48 :
                            state = 51;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText1(value);
                            return ;
                        case  49 :
                            _ThreadWatchList = ((com.mvnforum.jaxb.db.impl.ThreadWatchListImpl) spawnChildFromText((com.mvnforum.jaxb.db.impl.ThreadWatchListImpl.class), 50, value));
                            return ;
                        case  52 :
                            _FavoriteThreadList = ((com.mvnforum.jaxb.db.impl.FavoriteThreadListImpl) spawnChildFromText((com.mvnforum.jaxb.db.impl.FavoriteThreadListImpl.class), 53, value));
                            return ;
                        case  13 :
                            state = 14;
                            eatText2(value);
                            return ;
                        case  51 :
                            state = 54;
                            continue outer;
                        case  43 :
                            state = 44;
                            eatText3(value);
                            return ;
                        case  31 :
                            state = 32;
                            eatText4(value);
                            return ;
                        case  57 :
                            revertToParentFromText(value);
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  37 :
                            state = 38;
                            eatText5(value);
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  28 :
                            state = 29;
                            eatText6(value);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText7(value);
                            return ;
                        case  40 :
                            state = 41;
                            eatText8(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText9(value);
                            return ;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  55 :
                            _PostList = ((com.mvnforum.jaxb.db.impl.PostListImpl) spawnChildFromText((com.mvnforum.jaxb.db.impl.PostListImpl.class), 56, value));
                            return ;
                        case  16 :
                            state = 17;
                            eatText10(value);
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  34 :
                            state = 35;
                            eatText11(value);
                            return ;
                        case  54 :
                            state = 57;
                            continue outer;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  22 :
                            state = 23;
                            eatText12(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText13(value);
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  46 :
                            state = 47;
                            eatText14(value);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  25 :
                            state = 26;
                            eatText15(value);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText16(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadBody = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadVoteCount = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ThreadVoteCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadIcon = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadStatus = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ThreadStatus = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadViewCount = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ThreadViewCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadOption = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ThreadOption = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadTopic = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadReplyCount = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ThreadReplyCount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadCreationDate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadVoteTotalStars = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ThreadVoteTotalStars = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadHasPoll = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ThreadHasPoll = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadLastPostDate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadLastPostMemberName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadDuration = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ThreadDuration = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThreadType = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ThreadType = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MemberName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
